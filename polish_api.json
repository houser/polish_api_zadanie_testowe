{
  "swagger" : "2.0",
  "info" : {
    "description" : "Interface specification for services provided by third parties based on access to payment accounts. Prepared by the Polish Bank Association and its affiliates",
    "version" : "2_1_2",
    "title" : "Polish API"
  },
  "host" : "apiHost",
  "basePath" : "/",
  "tags" : [ {
    "name" : "AS",
    "description" : "Authorization Service"
  }, {
    "name" : "AIS",
    "description" : "Account Information Service"
  }, {
    "name" : "PIS",
    "description" : "Payment Initiation Services"
  }, {
    "name" : "CAF",
    "description" : "Confirmation of the Availability of Funds"
  } ],
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/v2_1_2.1/auth/v2_1_2.1/authorize" : {
      "post" : {
        "tags" : [ "AS" ],
        "summary" : "Requests OAuth2 authorization code",
        "description" : "Requests OAuth2 authorization code",
        "operationId" : "authorize",
        "parameters" : [ {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "authorizeRequest",
          "description" : "Data for OAuth2 Authorization Code Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AuthorizeRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/AuthorizeResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "x-swagger-router-controller" : "as"
    },
    "/v2_1_2.1/auth/v2_1_2.1/authorizeExt" : {
      "post" : {
        "tags" : [ "AS" ],
        "summary" : "Requests OAuth2 authorization code based on One-time authorization code issued by External Authorization Tool",
        "description" : "Requests OAuth2 authorization code based One-time authorization code issued by External Authorization Tool. Authorization code will be delivered to TPP as callback request from ASPSP if PSU authentication is confirmed by EAT. Callback function must provide similar notification also in case of unsuccessful authentication or its abandonment.",
        "operationId" : "authorizeExt",
        "parameters" : [ {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "eatCodeRequest",
          "description" : "Data for OAuth2 Authorization Code Request extended for EAT based authentication and callback response",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EatCodeRequest"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful TPP and EAT Code verification",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "x-swagger-router-controller" : "as"
    },
    "/v2_1_2.1/auth/v2_1_2.1/token" : {
      "post" : {
        "tags" : [ "AS" ],
        "summary" : "Requests OAuth2 access token value",
        "description" : "Requests OAuth2 access token value",
        "operationId" : "token",
        "parameters" : [ {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "tokenRequest",
          "description" : "Data for OAuth2 Access Token Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TokenRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/TokenResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "x-swagger-router-controller" : "as"
    },
    "/v2_1_2.1/accounts/v2_1_2.1/deleteConsent" : {
      "post" : {
        "tags" : [ "AIS" ],
        "summary" : "Removes consent",
        "description" : "Removes consent",
        "operationId" : "deleteConsent",
        "parameters" : [ {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "deleteConsentRequest",
          "description" : "Data for delete Consent Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeleteConsentRequest"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "x-swagger-router-controller" : "ais"
    },
    "/v2_1_2.1/accounts/v2_1_2.1/getAccounts" : {
      "post" : {
        "tags" : [ "AIS" ],
        "summary" : "Get information about all user's payment account",
        "description" : "User identification based on access token",
        "operationId" : "getAccounts",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The value of the Authorization header should consist of 'type' + 'credentials', where for the approach using the 'type' token should be 'Bearer'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "getAccountsRequest",
          "description" : "Data for Accounts Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/AccountsResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "429" : {
            "description" : "Request limit for the requested service exceeded",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "xs2a_auth_aspsp" : [ "ais-accounts" ]
        }, {
          "xs2a_auth_decoupled" : [ "ais-accounts" ]
        } ]
      },
      "x-swagger-router-controller" : "ais"
    },
    "/v2_1_2.1/accounts/v2_1_2.1/getAccount" : {
      "post" : {
        "tags" : [ "AIS" ],
        "summary" : "Get detailed information about user payment account",
        "description" : "User identification based on access token",
        "operationId" : "getAccount",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The value of the Authorization header should consist of 'type' + 'credentials', where for the approach using the 'type' token should be 'Bearer'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "getAccountRequest",
          "description" : "Data for Account Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountInfoRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/AccountResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "429" : {
            "description" : "Request limit for the requested service exceeded",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "xs2a_auth_aspsp" : [ "ais" ]
        }, {
          "xs2a_auth_decoupled" : [ "ais" ]
        } ]
      },
      "x-swagger-router-controller" : "ais"
    },
    "/v2_1_2.1/accounts/v2_1_2.1/getTransactionsDone" : {
      "post" : {
        "tags" : [ "AIS" ],
        "summary" : "Get list of user done transactions",
        "description" : "",
        "operationId" : "getTransactionsDone",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The value of the Authorization header should consist of 'type' + 'credentials', where for the approach using the 'type' token should be 'Bearer'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "getTransactionsDoneRequest",
          "description" : "Data for Transactions Done Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TransactionInfoRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/TransactionsDoneInfoResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "429" : {
            "description" : "Request limit for the requested service exceeded",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "xs2a_auth_aspsp" : [ "ais" ]
        }, {
          "xs2a_auth_decoupled" : [ "ais" ]
        } ]
      },
      "x-swagger-router-controller" : "ais"
    },
    "/v2_1_2.1/accounts/v2_1_2.1/getTransactionsPending" : {
      "post" : {
        "tags" : [ "AIS" ],
        "summary" : "Get list of user's pending transactions",
        "description" : "",
        "operationId" : "getTransactionsPending",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The value of the Authorization header should consist of 'type' + 'credentials', where for the approach using the 'type' token should be 'Bearer'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "getTransactionsPendingRequest",
          "description" : "Data for Transactions Pending Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TransactionInfoRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/TransactionPendingInfoResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "429" : {
            "description" : "Request limit for the requested service exceeded",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "xs2a_auth_aspsp" : [ "ais" ]
        }, {
          "xs2a_auth_decoupled" : [ "ais" ]
        } ]
      },
      "x-swagger-router-controller" : "ais"
    },
    "/v2_1_2.1/accounts/v2_1_2.1/getTransactionsRejected" : {
      "post" : {
        "tags" : [ "AIS" ],
        "summary" : "Get list of user's rejected transactions",
        "description" : "",
        "operationId" : "getTransactionsRejected",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The value of the Authorization header should consist of 'type' + 'credentials', where for the approach using the 'type' token should be 'Bearer'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "getTransactionsRejectedRequest",
          "description" : "Data for Transactions Rejected Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TransactionInfoRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/TransactionRejectedInfoResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "429" : {
            "description" : "Request limit for the requested service exceeded",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "xs2a_auth_aspsp" : [ "ais" ]
        }, {
          "xs2a_auth_decoupled" : [ "ais" ]
        } ]
      },
      "x-swagger-router-controller" : "ais"
    },
    "/v2_1_2.1/accounts/v2_1_2.1/getTransactionsCancelled" : {
      "post" : {
        "tags" : [ "AIS" ],
        "summary" : "Get list of user cancelled transactions",
        "description" : "",
        "operationId" : "getTransactionsCancelled",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The value of the Authorization header should consist of 'type' + 'credentials', where for the approach using the 'type' token should be 'Bearer'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "getTransactionsCancelledRequest",
          "description" : "Data for Transactions Cancelled Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TransactionInfoRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/TransactionsCancelledInfoResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "429" : {
            "description" : "Request limit for the requested service exceeded",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "xs2a_auth_aspsp" : [ "ais" ]
        }, {
          "xs2a_auth_decoupled" : [ "ais" ]
        } ]
      },
      "x-swagger-router-controller" : "ais"
    },
    "/v2_1_2.1/accounts/v2_1_2.1/getTransactionsScheduled" : {
      "post" : {
        "tags" : [ "AIS" ],
        "summary" : "Get list of user scheduled transactions",
        "description" : "",
        "operationId" : "getTransactionsScheduled",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The value of the Authorization header should consist of 'type' + 'credentials', where for the approach using the 'type' token should be 'Bearer'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "getTransactionsScheduledRequest",
          "description" : "Data for Transactions Scheduled Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TransactionInfoRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/TransactionsScheduledInfoResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "429" : {
            "description" : "Request limit for the requested service exceeded",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "xs2a_auth_aspsp" : [ "ais" ]
        }, {
          "xs2a_auth_decoupled" : [ "ais" ]
        } ]
      },
      "x-swagger-router-controller" : "ais"
    },
    "/v2_1_2.1/accounts/v2_1_2.1/getHolds" : {
      "post" : {
        "tags" : [ "AIS" ],
        "summary" : "Get list of user's holded operations",
        "description" : "",
        "operationId" : "getHolds",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The value of the Authorization header should consist of 'type' + 'credentials', where for the approach using the 'type' token should be 'Bearer'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "getHoldsRequest",
          "description" : "Data for hold Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/HoldRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/HoldInfoResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "429" : {
            "description" : "Request limit for the requested service exceeded",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "xs2a_auth_aspsp" : [ "ais" ]
        }, {
          "xs2a_auth_decoupled" : [ "ais" ]
        } ]
      },
      "x-swagger-router-controller" : "ais"
    },
    "/v2_1_2.1/accounts/v2_1_2.1/getTransactionDetail" : {
      "post" : {
        "tags" : [ "AIS" ],
        "summary" : "Get detailed information about user's single transaction",
        "description" : "",
        "operationId" : "getTransactionDetail",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The value of the Authorization header should consist of 'type' + 'credentials', where for the approach using the 'type' token should be 'Bearer'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "getTransationDetailRequest",
          "description" : "Data for transation detail Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TransactionDetailRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/TransactionDetailResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "429" : {
            "description" : "Request limit for the requested service exceeded",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "xs2a_auth_aspsp" : [ "ais" ]
        }, {
          "xs2a_auth_decoupled" : [ "ais" ]
        } ]
      },
      "x-swagger-router-controller" : "ais"
    },
    "/v2_1_2.1/payments/v2_1_2.1/domestic" : {
      "post" : {
        "tags" : [ "PIS" ],
        "summary" : "Initiate domestic transfer",
        "description" : "",
        "operationId" : "domestic",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The value of the Authorization header should consist of 'type' + 'credentials', where for the approach using the 'type' token should be 'Bearer'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "domesticRequest",
          "description" : "Data for domestic transfer",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PaymentDomesticRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/AddPaymentResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "xs2a_auth_aspsp" : [ "pis" ]
        }, {
          "xs2a_auth_decoupled" : [ "pis" ]
        } ]
      },
      "x-swagger-router-controller" : "pis"
    },
    "/v2_1_2.1/payments/v2_1_2.1/EEA" : {
      "post" : {
        "tags" : [ "PIS" ],
        "summary" : "Initiate SEPA foreign transfers",
        "description" : "",
        "operationId" : "EEA",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The value of the Authorization header should consist of 'type' + 'credentials', where for the approach using the 'type' token should be 'Bearer'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "EEARequest",
          "description" : "Data for SEPA foreign transfer",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PaymentEEARequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/AddPaymentResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "xs2a_auth_aspsp" : [ "pis" ]
        }, {
          "xs2a_auth_decoupled" : [ "pis" ]
        } ]
      },
      "x-swagger-router-controller" : "pis"
    },
    "/v2_1_2.1/payments/v2_1_2.1/nonEEA" : {
      "post" : {
        "tags" : [ "PIS" ],
        "summary" : "Initiate non SEPA foreign transfers",
        "operationId" : "nonEEA",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The value of the Authorization header should consist of 'type' + 'credentials', where for the approach using the 'type' token should be 'Bearer'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "nonEEARequest",
          "description" : "Data for non SEPA foreign transfer",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PaymentNonEEARequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/AddPaymentResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "xs2a_auth_aspsp" : [ "pis" ]
        }, {
          "xs2a_auth_decoupled" : [ "pis" ]
        } ]
      },
      "x-swagger-router-controller" : "pis"
    },
    "/v2_1_2.1/payments/v2_1_2.1/tax" : {
      "post" : {
        "tags" : [ "PIS" ],
        "summary" : "Initiate tax transfer",
        "description" : "",
        "operationId" : "tax",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The value of the Authorization header should consist of 'type' + 'credentials', where for the approach using the 'type' token should be 'Bearer'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "taxRequest",
          "description" : "Data for tax transfer",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PaymentTaxRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/AddPaymentResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "xs2a_auth_aspsp" : [ "pis" ]
        }, {
          "xs2a_auth_decoupled" : [ "pis" ]
        } ]
      },
      "x-swagger-router-controller" : "pis"
    },
    "/v2_1_2.1/payments/v2_1_2.1/bundle" : {
      "post" : {
        "tags" : [ "PIS" ],
        "summary" : "Initiate many transfers as bundle",
        "description" : "",
        "operationId" : "bundle",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The value of the Authorization header should consist of 'type' + 'credentials', where for the approach using the 'type' token should be 'Bearer'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "bundleRequest",
          "description" : "Data for bundle of transfers",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PaymentsBundleRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/PaymentsBundleResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "xs2a_auth_aspsp" : [ "pis" ]
        }, {
          "xs2a_auth_decoupled" : [ "pis" ]
        } ]
      },
      "x-swagger-router-controller" : "pis"
    },
    "/v2_1_2.1/payments/v2_1_2.1/recurring" : {
      "post" : {
        "tags" : [ "PIS" ],
        "summary" : "Defines new recurring payment",
        "description" : "",
        "operationId" : "recurring",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The value of the Authorization header should consist of 'type' + 'credentials', where for the approach using the 'type' token should be 'Bearer'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "recurringRequest",
          "description" : "Data for recurring payment definition",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RecurringPaymentRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/RecurringPaymentResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "xs2a_auth_aspsp" : [ "pis" ]
        }, {
          "xs2a_auth_decoupled" : [ "pis" ]
        } ]
      },
      "x-swagger-router-controller" : "pis"
    },
    "/v2_1_2.1/payments/v2_1_2.1/getPayment" : {
      "post" : {
        "tags" : [ "PIS" ],
        "summary" : "Get the status of payment",
        "operationId" : "getPayment",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The value of the Authorization header should consist of 'type' + 'credentials', where for the approach using the 'type' token should be 'Bearer'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payment",
          "description" : "Payment ID",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PaymentRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/GetPaymentResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "429" : {
            "description" : "Request limit for the requested service exceeded",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "xs2a_auth_aspsp" : [ "pis" ]
        }, {
          "xs2a_auth_decoupled" : [ "pis" ]
        } ]
      },
      "x-swagger-router-controller" : "pis"
    },
    "/v2_1_2.1/payments/v2_1_2.1/getBundle" : {
      "post" : {
        "tags" : [ "PIS" ],
        "summary" : "Get the status of bundle of payments",
        "operationId" : "getBundle",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The value of the Authorization header should consist of 'type' + 'credentials', where for the approach using the 'type' token should be 'Bearer'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "bundle",
          "description" : "Bundle ID",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BundleRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/BundleResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "429" : {
            "description" : "Request limit for the requested service exceeded",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "xs2a_auth_aspsp" : [ "pis" ]
        }, {
          "xs2a_auth_decoupled" : [ "pis" ]
        } ]
      },
      "x-swagger-router-controller" : "pis"
    },
    "/v2_1_2.1/payments/v2_1_2.1/getRecurringPayment" : {
      "post" : {
        "tags" : [ "PIS" ],
        "summary" : "Get the status of recurring payment",
        "operationId" : "getRecurringPayment",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The value of the Authorization header should consist of 'type' + 'credentials', where for the approach using the 'type' token should be 'Bearer'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "recurringPayment",
          "description" : "Recurring payment identification",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RecurringPaymentStatusRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/RecurringPaymentStatusResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "429" : {
            "description" : "Request limit for the requested service exceeded",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "xs2a_auth_aspsp" : [ "pis" ]
        }, {
          "xs2a_auth_decoupled" : [ "pis" ]
        } ]
      },
      "x-swagger-router-controller" : "pis"
    },
    "/v2_1_2.1/payments/v2_1_2.1/getMultiplePayments" : {
      "post" : {
        "tags" : [ "PIS" ],
        "summary" : "Get the status of multiple payments",
        "description" : "",
        "operationId" : "getMultiplePayments",
        "parameters" : [ {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payments",
          "description" : "Payments ID list",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PaymentsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/PaymentsResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "429" : {
            "description" : "Request limit for the requested service exceeded",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "x-swagger-router-controller" : "pis"
    },
    "/v2_1_2.1/payments/v2_1_2.1/cancelPayments" : {
      "post" : {
        "tags" : [ "PIS" ],
        "summary" : "Cancelation of future dated payment",
        "operationId" : "cancelPayments",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The value of the Authorization header should consist of 'type' + 'credentials', where for the approach using the 'type' token should be 'Bearer'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payment data",
          "description" : "Payments to be cancelled - identification data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CancelPaymentsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. Operation pefrormed but some of transactions could not be cancelled.",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/CancelPaymentsResponse"
            }
          },
          "204" : {
            "description" : "Success. Operation pefrormed with no exceptions.",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "xs2a_auth_aspsp" : [ "pis" ]
        }, {
          "xs2a_auth_decoupled" : [ "pis" ]
        } ]
      },
      "x-swagger-router-controller" : "pis"
    },
    "/v2_1_2.1/payments/v2_1_2.1/cancelRecurringPayment" : {
      "post" : {
        "tags" : [ "PIS" ],
        "summary" : "Cancelation of recurring payment",
        "operationId" : "cancelRecurringPayment",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The value of the Authorization header should consist of 'type' + 'credentials', where for the approach using the 'type' token should be 'Bearer'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "recurring payment data",
          "description" : "Recurring payment to be cancelled - identification data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CancelRecurringPaymentRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/CancelRecurringPaymentResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "xs2a_auth_aspsp" : [ "pis" ]
        }, {
          "xs2a_auth_decoupled" : [ "pis" ]
        } ]
      },
      "x-swagger-router-controller" : "pis"
    },
    "/v2_1_2.1/confirmation/v2_1_2.1/getConfirmationOfFunds" : {
      "post" : {
        "tags" : [ "CAF" ],
        "summary" : "Confirmation of the availability of funds",
        "description" : "Confirming the availability on the payers account of the amount necessary to execute the payment transaction, as defined in Art. 65 PSD2.",
        "operationId" : "getConfirmationOfFunds",
        "parameters" : [ {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Gzip, deflate",
          "required" : true,
          "type" : "string",
          "enum" : [ "gzip", "deflate" ]
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Prefered language of response",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Charset",
          "in" : "header",
          "description" : "UTF-8",
          "required" : true,
          "type" : "string",
          "enum" : [ "utf-8" ]
        }, {
          "name" : "X-JWS-SIGNATURE",
          "in" : "header",
          "description" : "Detached JWS signature of the body of the payload",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-REQUEST-ID",
          "in" : "header",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "confirmationOfFundsRequest",
          "description" : "Object with amount to check",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConfirmationOfFundsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Encoding" : {
                "type" : "string",
                "description" : "Gzip, deflate"
              },
              "X-JWS-SIGNATURE" : {
                "type" : "string",
                "description" : "Detached JWS signature of the body of the response"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/ConfirmationOfFundsResponse"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "405" : {
            "description" : "Method Not Allowed",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "406" : {
            "description" : "Not Acceptable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "415" : {
            "description" : "Unsupported Media Type",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "422" : {
            "description" : "Unprocessable entity",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "429" : {
            "description" : "Request limit for the requested service exceeded",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "501" : {
            "description" : "Not Implemented",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "x-swagger-router-controller" : "caf"
    }
  },
  "securityDefinitions" : {
    "xs2a_auth_aspsp" : {
      "type" : "oauth2",
      "authorizationUrl" : "https://apiHost/v2_1_2.1/auth/v2_1_2.1/authorize",
      "tokenUrl" : "https://apiHost/v2_1_2.1/auth/v2_1_2.1/token",
      "flow" : "accessCode",
      "scopes" : {
        "ais-accounts" : "Permission to retrieve the list of accounts through Account Information Service",
        "ais" : "Permission to execute methods of Account Information Service in context of particular account",
        "pis" : "Permission to initiate payments and check their statuses through Payment Initiation Service"
      }
    },
    "xs2a_auth_decoupled" : {
      "type" : "oauth2",
      "authorizationUrl" : "https://apiHost/auth/authorizeExt",
      "tokenUrl" : "https://apiHost/v2_1_2.1/auth/v2_1_2.1/token",
      "flow" : "accessCode",
      "scopes" : {
        "ais-accounts" : "Permission to retrieve the list of accounts through Account Information Service",
        "ais" : "Permission to execute methods of Account Information Service in context of particular account",
        "pis" : "Permission to initiate payments and check their statuses through Payment Initiation Service"
      }
    }
  },
  "definitions" : {
    "AuthorizeRequest" : {
      "type" : "object",
      "required" : [ "client_id", "redirect_uri", "requestHeader", "response_type", "scope", "scope_details", "state" ],
      "properties" : {
        "requestHeader" : {
          "$ref" : "#/definitions/RequestHeaderWithoutTokenAS"
        },
        "response_type" : {
          "type" : "string",
          "description" : "Typ odpowiedzi. Wartość stała: code"
        },
        "client_id" : {
          "type" : "string",
          "description" : "Identyfikator TPP"
        },
        "redirect_uri" : {
          "type" : "string",
          "description" : "Adres usługi TPP, na które zostanie wykonane przekierowanie po uwierzytelnieniu klienta ASPSP"
        },
        "scope" : {
          "type" : "string",
          "description" : "Typ zgody, o którą prosi TPP. Wybrana wartość z listy dostępnych identyfikatorów zgód, opisanych w specyfikacji standardu Polish API."
        },
        "scope_details" : {
          "$ref" : "#/definitions/ScopeDetailsInput"
        },
        "state" : {
          "type" : "string",
          "description" : "Losowa, unikalna w ramach TPP wartość – zabezpieczenie przed atakiem Cross-Site Request Forgery"
        }
      },
      "xml" : {
        "name" : "AuthorizeRequest"
      },
      "description" : "Klasa zapytania o uzyskanie kodu autoryzacyjnego zgodnego z OAuth2"
    },
    "AuthorizeResponse" : {
      "required" : [ "aspspRedirectUri", "responseHeader" ],
      "properties" : {
        "responseHeader" : {
          "$ref" : "#/definitions/ResponseHeader"
        },
        "aspspRedirectUri" : {
          "type" : "string",
          "description" : "Adres po stronie ASPSP, na który TPP powinien dokonać przekierowania przeglądarki PSU w celu jego uwierzytelnienia"
        }
      },
      "xml" : {
        "name" : "AuthorizeResponse"
      },
      "description" : "Klasa odpowiedzi na zapytanie TPP o autoryzację PSU do wykonania usługi interfejsu XS2A"
    },
    "EatCodeRequest" : {
      "type" : "object",
      "required" : [ "client_id", "eatCode", "requestHeader", "response_type", "scope", "scope_details" ],
      "properties" : {
        "requestHeader" : {
          "$ref" : "#/definitions/RequestHeaderWithoutTokenCallbackAS"
        },
        "response_type" : {
          "type" : "string",
          "description" : "Typ odpowiedzi. Wartość stała: code"
        },
        "eatCode" : {
          "type" : "string",
          "description" : "Jednorazowy kod autoryzacyjny wygenerowany przez EAT"
        },
        "eatType" : {
          "$ref" : "#/definitions/DictionaryItem"
        },
        "client_id" : {
          "type" : "string",
          "description" : "Identyfikator TPP"
        },
        "scope" : {
          "type" : "string",
          "description" : "Typ zgody, o którą prosi TPP. Wybrana wartość z listy dostępnych identyfikatorów zgód, opisanych w specyfikacji standardu Polish API."
        },
        "scope_details" : {
          "$ref" : "#/definitions/ScopeDetailsInput"
        },
        "state" : {
          "type" : "string",
          "description" : "Losowa, unikalna w ramach TPP wartość – zabezpieczenie przed atakiem Cross-Site Request Forgery"
        }
      },
      "xml" : {
        "name" : "EatCodeRequest"
      },
      "description" : "Klasa zapytania o uzyskanie kodu autoryzacyjnego zgodnego z OAuth2 na podstawie przekazanego kodu jednorazowego, wygenerowanego w EAT"
    },
    "TokenRequest" : {
      "type" : "object",
      "required" : [ "grant_type" ],
      "properties" : {
        "requestHeader" : {
          "$ref" : "#/definitions/RequestHeaderWithoutTokenAS"
        },
        "grant_type" : {
          "type" : "string",
          "description" : "Typ zastosowanej autoryzacji. Jedna z wartości: authorization_code, refresh_token, exchange_token (rozszerzenie standardu OAuth2)"
        },
        "Code" : {
          "type" : "string",
          "description" : "Kod autoryzacji uzyskany podczas żądania do usługi /authorize OAuth2. Wymagany dla grant_type=authorization_code."
        },
        "redirect_uri" : {
          "type" : "string",
          "description" : "Adres usługi TPP, na które zostanie wykonane przekierowanie po wygenerowaniu tokena dostępowego przez ASPSP. Wymagany dla grant_type=authorization_code."
        },
        "client_id" : {
          "type" : "string",
          "description" : "Identyfikator TPP. Wymagany dla grant_type=authorization_code."
        },
        "refresh_token" : {
          "type" : "string",
          "description" : "Wartość tokena, który służy do uzyskania nowego tokena dostępowego dla tego samego zakresu zgód (scope, scope_details) - w przypadku gdy pierwotny token utraci swoją ważność, lub dla zawężonego zakresu zgód. Wymagany dla grant_type=refresh_token."
        },
        "exchange_token" : {
          "type" : "string",
          "description" : "Wartość tokena, który służy do uzyskania nowego tokena dostępowego dla innego zakresu zgód (scope, scope_details). Wartością tego parametru powinien być token dostępowy ważnej sesji komuikacyjnej z interfejsem XS2A. Wymagany dla grant_type=exchange_token."
        },
        "scope" : {
          "type" : "string",
          "description" : "Typ zgody, o którą prosi TPP. Wybrana wartość z listy dostępnych identyfikatorów zgód, opisanych w specyfikacji standardu Polish API. Wymagany dla grant_type=exchange_token."
        },
        "scope_details" : {
          "$ref" : "#/definitions/ScopeDetailsInput"
        },
        "is_user_session" : {
          "type" : "boolean",
          "description" : "Określa czy dana sesja jest związana z interakcją z PSU – wartości true/false. Rozszerzenie standardu OAuth2."
        },
        "user_ip" : {
          "type" : "string",
          "description" : "IP przeglądarki użytkownika (informacja na potrzeby fraud detection). Rozszerzenie standardu OAuth2. Wymagany dla is_user_session = true."
        },
        "user_agent" : {
          "type" : "string",
          "description" : "Informacja dotycząca wersji przeglądarki użytkownika (informacja na potrzeby fraud detection). Rozszerzenie standardu OAuth2. Wymagany dla is_user_session = true."
        }
      },
      "xml" : {
        "name" : "TokenRequest"
      },
      "description" : "Klasa zapytania o uzyskanie tokena dostępowego zgodnego z OAuth2"
    },
    "TokenResponse" : {
      "required" : [ "access_token", "expires_in", "responseHeader", "scope_details", "token_type" ],
      "properties" : {
        "responseHeader" : {
          "$ref" : "#/definitions/ResponseHeader"
        },
        "access_token" : {
          "type" : "string",
          "description" : "Wartość wygenerowanego tokena dostępowego"
        },
        "token_type" : {
          "type" : "string",
          "description" : "Typ tokena dostępowego. Dozwolona wartość to Bearer."
        },
        "expires_in" : {
          "type" : "string",
          "description" : "Czas ważności tokena dostępowego, po którym zostanie on unieważniony. Wartość wyrażona w sekundach, od momentu wygenerowania odpowiedzi."
        },
        "refresh_token" : {
          "type" : "string",
          "description" : "Wartość wygenerowanego tokena służącego do uzyskania nowego tokena dostępowego bez konieczności ponownej autoryzacji"
        },
        "scope" : {
          "type" : "string",
          "description" : "Typy zgód które uzyskał TPP. Lista identyfikatorów zgodna ze specyfikacją standardu Polish API."
        },
        "scope_details" : {
          "$ref" : "#/definitions/ScopeDetailsOutput"
        }
      },
      "description" : "Klasa odpowiedzi na zapytanie TPP o wygenerowanie tokena dostępowego"
    },
    "DeleteConsentRequest" : {
      "type" : "object",
      "required" : [ "consentId", "requestHeader" ],
      "properties" : {
        "requestHeader" : {
          "$ref" : "#/definitions/RequestHeaderWithoutToken"
        },
        "consentId" : {
          "type" : "string",
          "description" : "Identyfikator zgody / Consent ID"
        }
      },
      "xml" : {
        "name" : "DeleteConsentRequest"
      },
      "description" : "Klasa zapytania o usunięcie zgody na dostęp do AIS"
    },
    "AccountsRequest" : {
      "type" : "object",
      "required" : [ "requestHeader" ],
      "properties" : {
        "requestHeader" : {
          "$ref" : "#/definitions/RequestHeaderAISCallback"
        },
        "typeOfPsuRelation" : {
          "type" : "string",
          "description" : "Użuwane w celu filtrowania - typ relacji PSU do rachunku / Used for filtering the results - type of relation between PSU and an Account",
          "enum" : [ "Owner", "Borrower", "Guarantor", "ProxyOwner", "Beneficiary", "Trustee" ]
        },
        "pageId" : {
          "type" : "string",
          "description" : "Używane w celu stronicowania danych: identyfikator strony, która ma zostać zwrócona w odpowiedzi / Used for paging the results. Identifier of the page to be returned in the response."
        },
        "perPage" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Używane w celu stronicowania danych: wielkość strony danych / Page size (paging info)",
          "minimum" : 1
        }
      },
      "xml" : {
        "name" : "AccountsRequest"
      },
      "description" : "Klasa zapytania o rachunki / Accounts Request Class"
    },
    "AccountResponse" : {
      "required" : [ "responseHeader" ],
      "properties" : {
        "responseHeader" : {
          "$ref" : "#/definitions/ResponseHeader"
        },
        "account" : {
          "$ref" : "#/definitions/AccountInfo"
        }
      },
      "description" : "Klasa odpowiedzi na zapytania o konto PSU / PSU's Account Response Class"
    },
    "AccountsResponse" : {
      "required" : [ "responseHeader" ],
      "properties" : {
        "responseHeader" : {
          "$ref" : "#/definitions/ResponseHeader"
        },
        "accounts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountBaseInfo"
          }
        },
        "pageInfo" : {
          "$ref" : "#/definitions/PageInfo"
        }
      },
      "description" : "Klasa odpowiedzi na zapytania o wiele kont PSU / PSU's Multiple Accounts Response Class"
    },
    "AccountBaseInfo" : {
      "type" : "object",
      "required" : [ "accountNumber", "accountType", "accountTypeName", "psuRelations" ],
      "properties" : {
        "accountNumber" : {
          "type" : "string",
          "description" : "Numer rachunku (częściowo zamaskowany) / Account number (partly masked)"
        },
        "accountTypeName" : {
          "type" : "string",
          "description" : "Nazwa typu rachunku (definiowana przez ASPSP) / Account's type name (defined by ASPSP)",
          "maxLength" : 32
        },
        "accountType" : {
          "$ref" : "#/definitions/DictionaryItem"
        },
        "psuRelations" : {
          "type" : "array",
          "description" : "Informacje na temat relacji PSU do rachunku / Description of relations between PSU and an Account",
          "items" : {
            "$ref" : "#/definitions/AccountPsuRelation"
          },
          "minItems" : 1
        }
      },
      "xml" : {
        "name" : "AccountBaseInfo"
      },
      "description" : "Klasa informacji o koncie / Account Information Class"
    },
    "AccountInfo" : {
      "type" : "object",
      "required" : [ "accountHolderType", "accountNumber", "accountType", "availableBalance", "bookingBalance", "currency", "nameAddress", "psuRelations" ],
      "properties" : {
        "accountNumber" : {
          "type" : "string",
          "description" : "Numer rachunku / Account number"
        },
        "nameAddress" : {
          "$ref" : "#/definitions/NameAddress"
        },
        "accountType" : {
          "$ref" : "#/definitions/DictionaryItem"
        },
        "accountTypeName" : {
          "type" : "string",
          "description" : "Nazwa typu rachunku (definiowana przez ASPSP) / Account's type name (defined by ASPSP)",
          "maxLength" : 32
        },
        "accountHolderType" : {
          "type" : "string",
          "description" : "Rodzaj posiadacza rachunku: osoba fizyczna lub osoba prawna / Account holder type: individual person or corporation",
          "enum" : [ "individual", "corporation" ]
        },
        "accountNameClient" : {
          "type" : "string",
          "description" : "Nazwa konta ustawiona przez klienta / Account name set by the client",
          "maxLength" : 32
        },
        "currency" : {
          "type" : "string",
          "description" : "Waluta rachunku / Currency",
          "maxLength" : 3
        },
        "availableBalance" : {
          "type" : "string",
          "description" : "Dostępne środki - po wykonaniu transakcji / Available funds",
          "pattern" : "^(0|([1-9][0-9]{0,}))\\.\\d{2}$"
        },
        "bookingBalance" : {
          "type" : "string",
          "description" : "Saldo księgowe rachunku - po wykonaniu transakcji / Book balance of the account",
          "pattern" : "^-?(0|([1-9][0-9]{0,}))\\.\\d{2}$"
        },
        "bank" : {
          "$ref" : "#/definitions/BankAccountInfo"
        },
        "psuRelations" : {
          "type" : "array",
          "description" : "Informacje na temat relacji PSU do rachunku / Description of relations between PSU and an Account",
          "items" : {
            "$ref" : "#/definitions/AccountPsuRelation"
          },
          "minItems" : 1
        },
        "auxData" : {
          "$ref" : "#/definitions/Map"
        }
      },
      "xml" : {
        "name" : "AccountInfo"
      },
      "description" : "Klasa informacji o koncie / Account Information Class"
    },
    "AccountPsuRelation" : {
      "type" : "object",
      "required" : [ "typeOfRelation" ],
      "properties" : {
        "typeOfRelation" : {
          "type" : "string",
          "description" : "Typ relacji PSU do rachunku / Type of relation between PSU and an Account",
          "enum" : [ "Owner", "Borrower", "Guarantor", "ProxyOwner", "Beneficiary", "Trustee" ]
        },
        "typeOfProxy" : {
          "type" : "string",
          "description" : "Typ pełnomocnictwa PSU do rachunku płatniczego. Wymagane gdy typ relacji to Pełnomocnik na rachunku. / Type of proxy. Required for ProxyOwner being a type of PSU relation.",
          "enum" : [ "General", "Special", "Administrator", "User" ]
        },
        "stake" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Wartość całkowita, wyrażona w procentach, określająca udział PSU w środkach na rachunku lub jego odpowiedzialności w przypadku produktów kredytowych. Dotyczy relacji Owner, Borrower, Guarantor. Opcjonalne. / Integer percentage value defining a participation of PSU in liabilities (in case of credit products) or in ownership of funds on the account. Applicable for the following types of PSU relations: Owner, Borrower, Guarantor. Optional.",
          "minimum" : 0,
          "maximum" : 100
        }
      },
      "xml" : {
        "name" : "AccountPsuRelation"
      },
      "description" : "Klasa opisująca relację PSU do rachunku płatniczego / Class describing relation between PSU and an Account"
    },
    "AccountInfoRequest" : {
      "type" : "object",
      "required" : [ "accountNumber", "requestHeader" ],
      "properties" : {
        "requestHeader" : {
          "$ref" : "#/definitions/RequestHeaderAIS"
        },
        "accountNumber" : {
          "type" : "string",
          "description" : "Numer rachunku / Account number"
        }
      },
      "xml" : {
        "name" : "AccountInfoRequest"
      },
      "description" : "Klasa zapytania o pojedynczy rachunek / Account Information Request Class"
    },
    "ItemInfoRequestBase" : {
      "type" : "object",
      "properties" : {
        "requestHeader" : {
          "$ref" : "#/definitions/RequestHeaderAISCallback"
        },
        "accountNumber" : {
          "type" : "string",
          "description" : "Numer rachunku / Account number"
        },
        "itemIdFrom" : {
          "type" : "string",
          "description" : "Element filtru: elementy od podanego identyfikatora (transakcji lub blokady) / Filter element - id of transaction or hold to start from",
          "maxLength" : 64
        },
        "transactionDateFrom" : {
          "type" : "string",
          "format" : "date",
          "description" : "Element filtru: data transakcji od, YYYY-MM-DD / Filter element"
        },
        "transactionDateTo" : {
          "type" : "string",
          "format" : "date",
          "description" : "Element filtru: data transakcji do, YYYY-MM-DD / Filter element"
        },
        "bookingDateFrom" : {
          "type" : "string",
          "format" : "date",
          "description" : "Element filtru: data księgowania od, YYYY-MM-DD. Ignorowane w przypadku pobierania listy blokad. / Filter element. Ignored during list of holds retrieval."
        },
        "bookingDateTo" : {
          "type" : "string",
          "format" : "date",
          "description" : "Element filtru: data księgowania do, YYYY-MM-DD. Ignorowane w przypadku pobierania listy blokad. / Filter element. Ignored during list of holds retrieval."
        },
        "minAmount" : {
          "type" : "string",
          "description" : "Element filtru: kwota od / Filter element",
          "pattern" : "^(0|([1-9][0-9]{0,}))\\.\\d{2}$"
        },
        "maxAmount" : {
          "type" : "string",
          "description" : "Element filtru: kwota do / Filter element",
          "pattern" : "^(0|([1-9][0-9]{0,}))\\.\\d{2}$"
        },
        "pageId" : {
          "type" : "string",
          "description" : "Używane w celu stronicowania danych: identyfikator strony, która ma zostać zwrócona w odpowiedzi / Used for paging the results. Identifier of the page to be returned in the response."
        },
        "perPage" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Używane w celu stronicowania danych: wielkość strony danych / Page size (paging info)",
          "minimum" : 1
        }
      },
      "xml" : {
        "name" : "ItemInfoRequestBase"
      },
      "description" : "Bazowa klasa dla zapytań o elementy takie jak transakcja i blokada / Element (transaction or hold) Information Request Base Class"
    },
    "TransactionInfoRequest" : {
      "xml" : {
        "name" : "TransactionInfoRequest"
      },
      "allOf" : [ {
        "$ref" : "#/definitions/ItemInfoRequestBase"
      }, {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Element filtru: transakcji / Filter element",
            "enum" : [ "CREDIT", "DEBIT" ]
          }
        }
      } ],
      "description" : "Klasa zapytania o transakcje / Transaction Information Request Class"
    },
    "HoldRequest" : {
      "xml" : {
        "name" : "HoldRequest"
      },
      "allOf" : [ {
        "$ref" : "#/definitions/ItemInfoRequestBase"
      }, {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Element filtru: transakcji / Filter element",
            "enum" : [ "DEBIT" ]
          }
        }
      } ],
      "description" : "Klasa zapytania o elementy (transakcje lub blokady) / Element (transaction or hold) Information Request Class"
    },
    "ItemInfoBase" : {
      "type" : "object",
      "required" : [ "amount", "itemId" ],
      "properties" : {
        "itemId" : {
          "type" : "string",
          "description" : "ID elementu (transakcji lub blokadzie) nadany przez ASPSP / Element (transaction or hold) ID (ASPSP)",
          "maxLength" : 64
        },
        "amount" : {
          "type" : "string",
          "description" : "Kwota transakcji / Amount of the transaction",
          "pattern" : "^(0|([1-9][0-9]{0,}))\\.\\d{2}$"
        },
        "currency" : {
          "type" : "string",
          "description" : "Kod ISO waluty transakcji / Currency (ISO)",
          "maxLength" : 3
        },
        "description" : {
          "type" : "string",
          "description" : "Tytuł transakcji / Description of the transaction",
          "maxLength" : 140
        },
        "transactionType" : {
          "type" : "string",
          "description" : "Typ transakcji / Transaction type",
          "maxLength" : 100
        },
        "tradeDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data operacji, YYYY-MM-DDThh:mm:ss[.mmm] / Date of the operation"
        },
        "mcc" : {
          "type" : "string",
          "description" : "Kod dla każdej transakcji/operacji wykonanej przy użyciu karty / A code of each transaction performed by card"
        },
        "auxData" : {
          "$ref" : "#/definitions/Map"
        }
      },
      "description" : "Klasa bazowa informacji o elemencie (transakcji lub blokadzie) / Element (transaction or hold) Information Base Class"
    },
    "HoldInfo" : {
      "xml" : {
        "name" : "HoldInfo"
      },
      "allOf" : [ {
        "$ref" : "#/definitions/ItemInfoBase"
      }, {
        "type" : "object",
        "properties" : {
          "holdExpirationDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Data ważności blokady, YYYY-MM-DDThh:mm:ss[.mmm]"
          },
          "initiator" : {
            "$ref" : "#/definitions/NameAddress"
          },
          "sender" : {
            "$ref" : "#/definitions/SenderRecipient"
          },
          "recipient" : {
            "$ref" : "#/definitions/SenderRecipient"
          }
        }
      } ],
      "description" : "Klasa opisująca blokadę na rachunku / Hold info class"
    },
    "TransactionPendingInfo" : {
      "xml" : {
        "name" : "TransactionPendingInfo"
      },
      "allOf" : [ {
        "$ref" : "#/definitions/ItemInfoBase"
      }, {
        "type" : "object",
        "required" : [ "transactionCategory" ],
        "properties" : {
          "transactionCategory" : {
            "type" : "string",
            "description" : "Kategoria transakcji uznanie/obciążenie / Transaction category (credit/debit)",
            "enum" : [ "CREDIT", "DEBIT" ]
          },
          "initiator" : {
            "$ref" : "#/definitions/NameAddress"
          },
          "sender" : {
            "$ref" : "#/definitions/SenderRecipient"
          },
          "recipient" : {
            "$ref" : "#/definitions/SenderRecipient"
          }
        }
      } ],
      "description" : "Klasa opisująca oczekującą transakcję płatniczą. Jest to transakcja niezaksięgowana, niemodyfikowalna, wpływającej na dostępne środki (saldo dostępne)."
    },
    "TransactionRejectedInfo" : {
      "xml" : {
        "name" : "TransactionRejectedInfo"
      },
      "allOf" : [ {
        "$ref" : "#/definitions/ItemInfoBase"
      }, {
        "type" : "object",
        "required" : [ "transactionCategory" ],
        "properties" : {
          "transactionCategory" : {
            "type" : "string",
            "description" : "Kategoria transakcji uznanie/obciążenie / Transaction category (credit/debit)",
            "enum" : [ "CREDIT", "DEBIT" ]
          },
          "initiator" : {
            "$ref" : "#/definitions/NameAddress"
          },
          "sender" : {
            "$ref" : "#/definitions/SenderRecipient"
          },
          "recipient" : {
            "$ref" : "#/definitions/SenderRecipient"
          },
          "rejectionReason" : {
            "type" : "string",
            "description" : "Powod odrzucenia",
            "maxLength" : 140
          },
          "rejectionDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Data odrzucenia, YYYY-MM-DDThh:mm:ss[.mmm]"
          }
        }
      } ],
      "description" : "Klasa opisująca odrzuconą transakcję płatniczą"
    },
    "TransactionInfo" : {
      "xml" : {
        "name" : "TransactionInfo"
      },
      "allOf" : [ {
        "$ref" : "#/definitions/ItemInfoBase"
      }, {
        "type" : "object",
        "required" : [ "transactionCategory" ],
        "properties" : {
          "transactionCategory" : {
            "type" : "string",
            "description" : "Kategoria transakcji uznanie/obciążenie / Transaction category (credit/debit)",
            "enum" : [ "CREDIT", "DEBIT" ]
          },
          "transactionStatus" : {
            "$ref" : "#/definitions/DictionaryItem"
          },
          "initiator" : {
            "$ref" : "#/definitions/NameAddress"
          },
          "sender" : {
            "$ref" : "#/definitions/SenderRecipient"
          },
          "recipient" : {
            "$ref" : "#/definitions/SenderRecipient"
          },
          "bookingDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Data księgowania, YYYY-MM-DDThh:mm:ss[.mmm]. Wymagane warunkowo - w przypadku transakcji zaksięgowanych."
          },
          "postTransactionBalance" : {
            "type" : "string",
            "description" : "Saldo rachunku po transakcji. Wymagane warunkowo - w przypadku transakcji zaksięgowanych.",
            "pattern" : "^-?(0|([1-9][0-9]{0,}))\\.\\d{2}$"
          }
        }
      } ],
      "description" : "Klasa opisująca transakcję płatniczą"
    },
    "TransactionCancelledInfo" : {
      "xml" : {
        "name" : "TransactionCancelledInfo"
      },
      "allOf" : [ {
        "$ref" : "#/definitions/ItemInfoBase"
      }, {
        "type" : "object",
        "required" : [ "transactionCategory" ],
        "properties" : {
          "transactionCategory" : {
            "type" : "string",
            "description" : "Kategoria transakcji uznanie/obciążenie / Transaction category (credit/debit)",
            "enum" : [ "CREDIT", "DEBIT" ]
          },
          "transactionStatus" : {
            "$ref" : "#/definitions/DictionaryItem"
          },
          "initiator" : {
            "$ref" : "#/definitions/NameAddress"
          },
          "sender" : {
            "$ref" : "#/definitions/SenderRecipient"
          },
          "recipient" : {
            "$ref" : "#/definitions/SenderRecipient"
          }
        }
      } ],
      "description" : "Klasa opisująca odwołaną transakcję płatniczą"
    },
    "TransactionScheduledInfo" : {
      "xml" : {
        "name" : "TransactionScheduledInfo"
      },
      "allOf" : [ {
        "$ref" : "#/definitions/ItemInfoBase"
      }, {
        "type" : "object",
        "required" : [ "transactionCategory" ],
        "properties" : {
          "transactionCategory" : {
            "type" : "string",
            "description" : "Kategoria transakcji uznanie/obciążenie / Transaction category (credit/debit)",
            "enum" : [ "CREDIT", "DEBIT" ]
          },
          "transactionStatus" : {
            "$ref" : "#/definitions/DictionaryItem"
          },
          "initiator" : {
            "$ref" : "#/definitions/NameAddress"
          },
          "sender" : {
            "$ref" : "#/definitions/SenderRecipient"
          },
          "recipient" : {
            "$ref" : "#/definitions/SenderRecipient"
          }
        }
      } ],
      "description" : "Klasa opisująca zaplanowaną transakcję płatniczą"
    },
    "TransactionsDoneInfoResponse" : {
      "required" : [ "responseHeader" ],
      "properties" : {
        "responseHeader" : {
          "$ref" : "#/definitions/ResponseHeader"
        },
        "transactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TransactionInfo"
          }
        },
        "pageInfo" : {
          "$ref" : "#/definitions/PageInfo"
        }
      },
      "xml" : {
        "name" : "TransactionsDoneInfoResponse"
      },
      "description" : "Klasa odpowiedzi zawierająca listę transakcji done / Done Transaction Information Response Class"
    },
    "TransactionsCancelledInfoResponse" : {
      "required" : [ "responseHeader" ],
      "properties" : {
        "responseHeader" : {
          "$ref" : "#/definitions/ResponseHeader"
        },
        "transactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TransactionCancelledInfo"
          }
        },
        "pageInfo" : {
          "$ref" : "#/definitions/PageInfo"
        }
      },
      "xml" : {
        "name" : "TransactionsCancelledInfoResponse"
      },
      "description" : "Klasa odpowiedzi zawierająca listę transakcji cancelled / Cancelled Transaction Information Response Class"
    },
    "TransactionsScheduledInfoResponse" : {
      "required" : [ "responseHeader" ],
      "properties" : {
        "responseHeader" : {
          "$ref" : "#/definitions/ResponseHeader"
        },
        "transactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TransactionScheduledInfo"
          }
        },
        "pageInfo" : {
          "$ref" : "#/definitions/PageInfo"
        }
      },
      "xml" : {
        "name" : "TransactionsScheduledInfoResponse"
      },
      "description" : "Klasa odpowiedzi zawierająca listę transakcji scheduled / Scheduled Transaction Information Response Class"
    },
    "TransactionPendingInfoResponse" : {
      "required" : [ "responseHeader" ],
      "properties" : {
        "responseHeader" : {
          "$ref" : "#/definitions/ResponseHeader"
        },
        "transactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TransactionPendingInfo"
          }
        },
        "pageInfo" : {
          "$ref" : "#/definitions/PageInfo"
        }
      },
      "xml" : {
        "name" : "TransactionPendingInfoResponse"
      },
      "description" : "Klasa odpowiedzi zawierająca listę transakcji pending / Pending Transaction Information Response Class"
    },
    "TransactionRejectedInfoResponse" : {
      "required" : [ "responseHeader" ],
      "properties" : {
        "responseHeader" : {
          "$ref" : "#/definitions/ResponseHeader"
        },
        "transactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TransactionRejectedInfo"
          }
        },
        "pageInfo" : {
          "$ref" : "#/definitions/PageInfo"
        }
      },
      "xml" : {
        "name" : "TransactionRejectedInfoResponse"
      },
      "description" : "Klasa odpowiedzi zawierająca listę transakcji rejected / Rejected Transaction Information Response Class"
    },
    "HoldInfoResponse" : {
      "required" : [ "responseHeader" ],
      "properties" : {
        "responseHeader" : {
          "$ref" : "#/definitions/ResponseHeader"
        },
        "holds" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HoldInfo"
          }
        },
        "pageInfo" : {
          "$ref" : "#/definitions/PageInfo"
        }
      },
      "xml" : {
        "name" : "HoldInfoResponse"
      },
      "description" : "Klasa odpowiedzi zawierająca listę blokad na rachunku / Hold Information Response Class"
    },
    "TransactionDetailRequest" : {
      "type" : "object",
      "required" : [ "accountNumber", "itemId", "requestHeader" ],
      "properties" : {
        "requestHeader" : {
          "$ref" : "#/definitions/RequestHeaderAIS"
        },
        "itemId" : {
          "type" : "string",
          "description" : "ID elementu (transakcji lub blokadzie) nadany przez ASPSP / Element (transaction or hold) ID (ASPSP)",
          "maxLength" : 64
        },
        "accountNumber" : {
          "type" : "string",
          "description" : "Numer konta nadawcy / Sender account number",
          "maxLength" : 34
        },
        "bookingDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data zaksięgowania operacji, YYYY-MM-DDThh:mm:ss[.mmm] / Transaction booking date"
        }
      },
      "xml" : {
        "name" : "TransactionDetailRequest"
      },
      "description" : "Klasa zapytania o pojedynczą transakcję / Transaction Detail Request Class"
    },
    "Payor" : {
      "type" : "object",
      "required" : [ "payorId", "payorIdType" ],
      "properties" : {
        "payorId" : {
          "type" : "string",
          "description" : "Identyfikator płatnika / Payor ID",
          "maxLength" : 20
        },
        "payorIdType" : {
          "type" : "string",
          "description" : "Typ identyfikatora płatnika / Payor ID type",
          "enum" : [ "N", "P", "R", "1", "2", "3" ],
          "x-ms-enum" : {
            "name" : "payorIdType",
            "values" : [ {
              "value" : "N",
              "description" : "NIP"
            }, {
              "value" : "P",
              "description" : "Pesel"
            }, {
              "value" : "R",
              "description" : "Regon"
            }, {
              "value" : 1,
              "description" : "Dowód osobisty"
            }, {
              "value" : 2,
              "description" : "Paszport"
            }, {
              "value" : 3,
              "description" : "Inny"
            } ]
          }
        }
      },
      "xml" : {
        "name" : "Payor"
      },
      "description" : "Klasa informacji o płatniku do US / Tax Payor Information Class"
    },
    "SocialSecurityPayor" : {
      "type" : "object",
      "properties" : {
        "nip" : {
          "type" : "string",
          "description" : "Numer Identyfikacji Podatkowej / Payor's Tax Identification Number",
          "maxLength" : 10
        },
        "additionalPayorId" : {
          "type" : "string",
          "description" : "Dodatkowy numer identyfikacyjny płatnika / Payor's additional identification number",
          "maxLength" : 20
        },
        "additionalPayorIdType" : {
          "type" : "string",
          "description" : "Typ dodatkowego identyfikatora płatnika / Payor's additional identifier type",
          "enum" : [ "P", "R", "1", "2" ],
          "x-ms-enum" : {
            "name" : "additionalPayorIdType",
            "values" : [ {
              "value" : "P",
              "description" : "Pesel"
            }, {
              "value" : "R",
              "description" : "Regon"
            }, {
              "value" : 1,
              "description" : "Dowód osobisty"
            }, {
              "value" : 2,
              "description" : "Paszport"
            } ]
          }
        }
      },
      "xml" : {
        "name" : "SocialSecurityPayor"
      },
      "description" : "Klasa informacji o płatniku do ZUS / Polish Social Security Institution (ZUS) Payor Information Class"
    },
    "TransactionInfoZUS" : {
      "type" : "object",
      "properties" : {
        "payerInfo" : {
          "$ref" : "#/definitions/SocialSecurityPayor"
        },
        "contributionType" : {
          "type" : "string",
          "description" : "Typ wpłaty / Contribution type",
          "maxLength" : 1
        },
        "contributionId" : {
          "type" : "string",
          "description" : "Numer deklaracji / Contribution identifier",
          "maxLength" : 2
        },
        "contributionPeriod" : {
          "type" : "string",
          "description" : "Okres deklaracji / Contribution period, Format: MMYYYY",
          "maxLength" : 6
        },
        "paymentTypeId" : {
          "type" : "string",
          "description" : "Identyfikator typu płatności / Payment type ID",
          "maxLength" : 1
        },
        "obligationId" : {
          "type" : "string",
          "description" : "Numer tytułu wykonawczego / Obligation identifier or number",
          "maxLength" : 40
        }
      },
      "xml" : {
        "name" : "TransactionInfoZUS"
      },
      "description" : "Klasa informacji danych dla przelewu do ZUS / ZUS Transfer Information Class"
    },
    "TransactionInfoTax" : {
      "type" : "object",
      "required" : [ "formCode", "payerInfo" ],
      "properties" : {
        "payerInfo" : {
          "$ref" : "#/definitions/Payor"
        },
        "formCode" : {
          "type" : "string",
          "description" : "Symbol formularza Urzędu Skarbowego lub Izby Celnej / Tax authority form symbol",
          "maxLength" : 7
        },
        "periodId" : {
          "type" : "string",
          "description" : "Numer okresu. Wymagany warunkowo - w zależności od wartości parametru formCode. / Period number. Required conditionally - depending on formCode parameter value.",
          "maxLength" : 7
        },
        "periodType" : {
          "type" : "string",
          "description" : "Typ okresu. Wymagany warunkowo - w zależności od wartości parametru formCode. / Period type. Required conditionally - depending on formCode parameter value.",
          "maxLength" : 7
        },
        "year" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Rok okresu. Wymagany warunkowo - w zależności od wartości parametru formCode. / Period year. Required conditionally - depending on formCode parameter value.",
          "maximum" : 9999
        },
        "obligationId" : {
          "type" : "string",
          "description" : "Identyfikator zobowiązania, z którego wynika należność podatku np. decyzja, tytuł wykonawczy, postanowienie / Obligation ID",
          "maxLength" : 40
        }
      },
      "xml" : {
        "name" : "TransactionInfoTax"
      },
      "description" : "Klasa informacji danych dla przelewu podatkowego do Urzędu Skarbowego lub Izby Celnej / Tax Transfer"
    },
    "TransactionInfoCard" : {
      "type" : "object",
      "properties" : {
        "cardHolder" : {
          "type" : "string",
          "description" : "Właściciel karty / Card holder"
        },
        "cardNumber" : {
          "type" : "string",
          "description" : "Numer karty / Card number"
        }
      },
      "description" : "Klasa reprezentująca informacje o karcie w ramach transakcji / Transaction Card Information Class"
    },
    "TransactionDetailResponse" : {
      "type" : "object",
      "required" : [ "baseInfo", "responseHeader" ],
      "properties" : {
        "responseHeader" : {
          "$ref" : "#/definitions/ResponseHeader"
        },
        "baseInfo" : {
          "$ref" : "#/definitions/TransactionInfo"
        },
        "zusInfo" : {
          "$ref" : "#/definitions/TransactionInfoZUS"
        },
        "usInfo" : {
          "$ref" : "#/definitions/TransactionInfoTax"
        },
        "cardInfo" : {
          "$ref" : "#/definitions/TransactionInfoCard"
        },
        "currencyDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data kursu waluty, YYYY-MM-DDThh:mm:ss[.mmm] / Date of the currency exchange rate"
        },
        "transactionRate" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CurrencyRate"
          }
        },
        "baseCurrency" : {
          "type" : "string",
          "description" : "Waluta oryginalna transakcji, kod ISO / Currency of the transaction, ISO code",
          "maxLength" : 3
        },
        "amountBaseCurrency" : {
          "type" : "string",
          "description" : "Kwota w oryginalnej walucie / Amount of the transaction",
          "pattern" : "^(0|([1-9][0-9]{0,}))\\.\\d{2}$"
        },
        "usedPaymentInstrumentId" : {
          "type" : "string",
          "description" : "Unikalny identyfikator instrumentu płatniczego, za którego pomocą wykonano transakcję / Payment Instrument ID",
          "maxLength" : 32
        },
        "tppTransactionId" : {
          "type" : "string",
          "description" : "Unikalny identyfikator transakcji po stronie TPP / Transaction ID (TPP)",
          "maxLength" : 64
        },
        "tppName" : {
          "type" : "string",
          "description" : "Nazwa TPP / TPP name",
          "maxLength" : 32
        },
        "rejectionReason" : {
          "type" : "string",
          "description" : "Przyczyna odrzucenia / Reason for rejection",
          "maxLength" : 140
        },
        "holdExpirationDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data ważności blokady, YYYY-MM-DDThh:mm:ss[.mmm] / Hold expiration date"
        }
      },
      "xml" : {
        "name" : "TransactionDetailResponse"
      },
      "description" : "Klasa odpowiedzi na zapytanie o transakcję /  Transaction Detail Response Class"
    },
    "PaymentDomesticRequest" : {
      "type" : "object",
      "required" : [ "deliveryMode", "recipient", "requestHeader", "sender", "system", "tppTransactionId", "transferData" ],
      "properties" : {
        "requestHeader" : {
          "$ref" : "#/definitions/RequestHeaderCallback"
        },
        "recipient" : {
          "$ref" : "#/definitions/RecipientPIS"
        },
        "sender" : {
          "$ref" : "#/definitions/SenderPISDomestic"
        },
        "transferData" : {
          "$ref" : "#/definitions/TransferData"
        },
        "tppTransactionId" : {
          "type" : "string",
          "description" : "ID transakcji nadany przez TPP / Transaction ID (TPP)",
          "maxLength" : 64
        },
        "deliveryMode" : {
          "type" : "string",
          "description" : "Tryb pilności / Urgency mode",
          "enum" : [ "ExpressD0", "StandardD1" ]
        },
        "system" : {
          "type" : "string",
          "description" : "Droga jaką przelew ma być rozliczony / The way the transfer should be settled",
          "enum" : [ "Elixir", "ExpressElixir", "Sorbnet", "BlueCash", "Internal" ]
        },
        "hold" : {
          "type" : "boolean",
          "description" : "Czy założyć blokadę (w przypadku np. zlecenia przelewu w dniu wolnym) / Indicates if payment should be holded"
        },
        "executionMode" : {
          "type" : "string",
          "description" : "Tryb realizacji płatności. Nadrzędna informacja decydująca o tym w jakim trybie zostanie zrealizowana płatność. / Payment execution mode. The superior information deciding which mode is to be used to execute payment.",
          "enum" : [ "Immediate", "FutureDated" ]
        }
      },
      "xml" : {
        "name" : "PaymentDomesticRequest"
      },
      "description" : "Klasa zlecenia przelewu krajowego / Domestic Transfer Request Class"
    },
    "PaymentDomesticRequestBundled" : {
      "type" : "object",
      "required" : [ "deliveryMode", "recipient", "sender", "system", "tppTransactionId", "transferData" ],
      "properties" : {
        "recipient" : {
          "$ref" : "#/definitions/RecipientPIS"
        },
        "sender" : {
          "$ref" : "#/definitions/SenderPISDomestic"
        },
        "transferData" : {
          "$ref" : "#/definitions/TransferData"
        },
        "tppTransactionId" : {
          "type" : "string",
          "description" : "ID transakcji nadany przez TPP / Transaction ID (TPP)",
          "maxLength" : 64
        },
        "deliveryMode" : {
          "type" : "string",
          "description" : "Tryb pilności / Urgency mode",
          "enum" : [ "ExpressD0", "StandardD1" ]
        },
        "system" : {
          "type" : "string",
          "description" : "Droga jaką przelew ma być rozliczony / The way the transfer should be settled",
          "enum" : [ "Elixir", "ExpressElixir", "Sorbnet", "BlueCash", "Internal" ]
        },
        "hold" : {
          "type" : "boolean",
          "description" : "Czy założyć blokadę (w przypadku np. zlecenia przelewu w dniu wolnym) / Indicates if payment should be holded"
        },
        "executionMode" : {
          "type" : "string",
          "description" : "Tryb realizacji płatności. Nadrzędna informacja decydująca o tym w jakim trybie zostanie zrealizowana płatność. / Payment execution mode. The superior information deciding which mode is to be used to execute payment.",
          "enum" : [ "Immediate", "FutureDated" ]
        }
      },
      "xml" : {
        "name" : "PaymentDomesticRequestBundled"
      },
      "description" : "Klasa zlecenia przelewu krajowego w ramach paczki / Domestic Transfer inside bundle Request Class"
    },
    "RecurringDomesticPayment" : {
      "type" : "object",
      "required" : [ "deliveryMode", "recipient", "sender", "system", "transferData" ],
      "properties" : {
        "recipient" : {
          "$ref" : "#/definitions/RecipientPIS"
        },
        "sender" : {
          "$ref" : "#/definitions/SenderPISDomestic"
        },
        "transferData" : {
          "$ref" : "#/definitions/TransferData"
        },
        "deliveryMode" : {
          "type" : "string",
          "description" : "Tryb pilności / Urgency mode",
          "enum" : [ "ExpressD0", "StandardD1" ]
        },
        "system" : {
          "type" : "string",
          "description" : "Droga jaką przelew ma być rozliczony / The way the transfer should be settled",
          "enum" : [ "Elixir", "ExpressElixir", "Sorbnet", "BlueCash", "Internal" ]
        },
        "hold" : {
          "type" : "boolean",
          "description" : "Czy założyć blokadę (w przypadku np. zlecenia przelewu w dniu wolnym) / Indicates if payment should be holded"
        }
      },
      "xml" : {
        "name" : "RecurringDomesticPayment"
      },
      "description" : "Struktura danych przelewu krajowego, użyta do zdefinowania nowej płatności cyklicznej. / Data structure of domestic payment that is to be used to define new recurring payment."
    },
    "PaymentEEARequest" : {
      "type" : "object",
      "required" : [ "deliveryMode", "recipient", "requestHeader", "sender", "system", "tppTransactionId", "transferData" ],
      "properties" : {
        "requestHeader" : {
          "$ref" : "#/definitions/RequestHeaderCallback"
        },
        "recipient" : {
          "$ref" : "#/definitions/RecipientPISForeign"
        },
        "sender" : {
          "$ref" : "#/definitions/SenderPISForeign"
        },
        "transferData" : {
          "$ref" : "#/definitions/TransferDataCurrencyRequired"
        },
        "tppTransactionId" : {
          "type" : "string",
          "description" : "ID transakcji nadany przez TPP / Transaction ID (TPP)",
          "maxLength" : 64
        },
        "deliveryMode" : {
          "type" : "string",
          "description" : "Tryb pilności / Urgency mode",
          "enum" : [ "ExpressD0", "StandardD1" ]
        },
        "system" : {
          "type" : "string",
          "description" : "Droga jaką przelew ma być rozliczony / The way the transfer should be settled",
          "enum" : [ "SEPA", "InstantSEPA", "Target" ]
        },
        "hold" : {
          "type" : "boolean",
          "description" : "Czy założyć blokadę (w przypadku np. zlecenia przelewu w dniu wolnym) / Indicates if payment should be holded"
        },
        "executionMode" : {
          "type" : "string",
          "description" : "Tryb realizacji płatności. Nadrzędna informacja decydująca o tym w jakim trybie zostanie zrealizowana płatność. / Payment execution mode. The superior information deciding which mode is to be used to execute payment.",
          "enum" : [ "Immediate", "FutureDated" ]
        }
      },
      "xml" : {
        "name" : "PaymentEEARequest"
      },
      "description" : "Klasa zlecenia przelewu zagranicznego SEPA / EEA Transfer Request Class"
    },
    "PaymentEEARequestBundled" : {
      "type" : "object",
      "required" : [ "deliveryMode", "recipient", "sender", "system", "tppTransactionId", "transferData" ],
      "properties" : {
        "recipient" : {
          "$ref" : "#/definitions/RecipientPISForeign"
        },
        "sender" : {
          "$ref" : "#/definitions/SenderPISForeign"
        },
        "transferData" : {
          "$ref" : "#/definitions/TransferDataCurrencyRequired"
        },
        "tppTransactionId" : {
          "type" : "string",
          "description" : "ID transakcji nadany przez TPP / Transaction ID (TPP)",
          "maxLength" : 64
        },
        "deliveryMode" : {
          "type" : "string",
          "description" : "Tryb pilności / Urgency mode",
          "enum" : [ "ExpressD0", "StandardD1" ]
        },
        "system" : {
          "type" : "string",
          "description" : "Droga jaką przelew ma być rozliczony / The way the transfer should be settled",
          "enum" : [ "SEPA", "InstantSEPA", "Target" ]
        },
        "hold" : {
          "type" : "boolean",
          "description" : "Czy założyć blokadę (w przypadku np. zlecenia przelewu w dniu wolnym) / Indicates if payment should be holded"
        },
        "executionMode" : {
          "type" : "string",
          "description" : "Tryb realizacji płatności. Nadrzędna informacja decydująca o tym w jakim trybie zostanie zrealizowana płatność. / Payment execution mode. The superior information deciding which mode is to be used to execute payment.",
          "enum" : [ "Immediate", "FutureDated" ]
        }
      },
      "xml" : {
        "name" : "PaymentEEARequestBundled"
      },
      "description" : "Klasa zlecenia przelewu zagranicznego SEPA w ramach paczki / EEA Transfer inside bundle Request Class"
    },
    "RecurringEEAPayment" : {
      "type" : "object",
      "required" : [ "deliveryMode", "recipient", "sender", "system", "transferData" ],
      "properties" : {
        "recipient" : {
          "$ref" : "#/definitions/RecipientPISForeign"
        },
        "sender" : {
          "$ref" : "#/definitions/SenderPISForeign"
        },
        "transferData" : {
          "$ref" : "#/definitions/TransferDataCurrencyRequired"
        },
        "deliveryMode" : {
          "type" : "string",
          "description" : "Tryb pilności / Urgency mode",
          "enum" : [ "ExpressD0", "StandardD1" ]
        },
        "system" : {
          "type" : "string",
          "description" : "Droga jaką przelew ma być rozliczony / The way the transfer should be settled",
          "enum" : [ "SEPA", "InstantSEPA", "Target" ]
        },
        "hold" : {
          "type" : "boolean",
          "description" : "Czy założyć blokadę (w przypadku np. zlecenia przelewu w dniu wolnym) / Indicates if payment should be holded"
        }
      },
      "xml" : {
        "name" : "RecurringEEAPayment"
      },
      "description" : "Struktura danych przelewu zagranicznego SEPA, użyta do zdefinowania nowej płatności cyklicznej. / Data structure of EEA payment that is to be used to define new recurring payment."
    },
    "PaymentNonEEARequest" : {
      "type" : "object",
      "required" : [ "deliveryMode", "recipient", "recipientBank", "requestHeader", "sender", "system", "tppTransactionId", "transferData" ],
      "properties" : {
        "requestHeader" : {
          "$ref" : "#/definitions/RequestHeaderCallback"
        },
        "recipient" : {
          "$ref" : "#/definitions/RecipientPISForeign"
        },
        "recipientBank" : {
          "$ref" : "#/definitions/Bank"
        },
        "sender" : {
          "$ref" : "#/definitions/SenderPISForeign"
        },
        "transferData" : {
          "$ref" : "#/definitions/TransferDataCurrencyRequired"
        },
        "transferCharges" : {
          "type" : "string",
          "description" : "Klauzula kosztowa / The cost clause",
          "maxLength" : 3
        },
        "tppTransactionId" : {
          "type" : "string",
          "description" : "ID transakcji nadany przez TPP / Transaction ID (TPP)",
          "maxLength" : 64
        },
        "deliveryMode" : {
          "type" : "string",
          "description" : "Tryb pilności / Urgency mode",
          "enum" : [ "ExpressD0", "UrgentD1", "StandardD2" ]
        },
        "system" : {
          "type" : "string",
          "description" : "Droga jaką przelew ma być rozliczony / The way the transfer should be settled",
          "enum" : [ "Swift" ]
        },
        "hold" : {
          "type" : "boolean",
          "description" : "Czy założyć blokadę (w przypadku np. zlecenia przelewu w dniu wolnym) / Indicates if payment should be holded"
        },
        "executionMode" : {
          "type" : "string",
          "description" : "Tryb realizacji płatności. Nadrzędna informacja decydująca o tym w jakim trybie zostanie zrealizowana płatność. / Payment execution mode. The superior information deciding which mode is to be used to execute payment.",
          "enum" : [ "Immediate", "FutureDated" ]
        }
      },
      "xml" : {
        "name" : "PaymentNonEEARequest"
      },
      "description" : "Klasa zlecenia przelewu zagranicznego innego niż SEPA / NonEEA Transfer Request Class"
    },
    "PaymentNonEEARequestBundled" : {
      "type" : "object",
      "required" : [ "deliveryMode", "recipient", "recipientBank", "sender", "system", "tppTransactionId", "transferData" ],
      "properties" : {
        "recipient" : {
          "$ref" : "#/definitions/RecipientPISForeign"
        },
        "recipientBank" : {
          "$ref" : "#/definitions/Bank"
        },
        "sender" : {
          "$ref" : "#/definitions/SenderPISForeign"
        },
        "transferData" : {
          "$ref" : "#/definitions/TransferDataCurrencyRequired"
        },
        "transferCharges" : {
          "type" : "string",
          "description" : "Klauzula kosztowa / The cost clause",
          "maxLength" : 3
        },
        "tppTransactionId" : {
          "type" : "string",
          "description" : "ID transakcji nadany przez TPP / Transaction ID (TPP)",
          "maxLength" : 64
        },
        "deliveryMode" : {
          "type" : "string",
          "description" : "Tryb pilności / Urgency mode",
          "enum" : [ "ExpressD0", "UrgentD1", "StandardD2" ]
        },
        "system" : {
          "type" : "string",
          "description" : "Droga jaką przelew ma być rozliczony / The way the transfer should be settled",
          "enum" : [ "Swift" ]
        },
        "hold" : {
          "type" : "boolean",
          "description" : "Czy założyć blokadę (w przypadku np. zlecenia przelewu w dniu wolnym) / Indicates if payment should be holded"
        },
        "executionMode" : {
          "type" : "string",
          "description" : "Tryb realizacji płatności. Nadrzędna informacja decydująca o tym w jakim trybie zostanie zrealizowana płatność. / Payment execution mode. The superior information deciding which mode is to be used to execute payment.",
          "enum" : [ "Immediate", "FutureDated" ]
        }
      },
      "xml" : {
        "name" : "PaymentNonEEARequestBundled"
      },
      "description" : "Klasa zlecenia przelewu zagranicznego innego niż SEPA w ramach paczki / NonEEA Transfer inside bundle Request Class"
    },
    "RecurringNonEEAPayment" : {
      "type" : "object",
      "required" : [ "deliveryMode", "recipient", "recipientBank", "sender", "system", "transferData" ],
      "properties" : {
        "recipient" : {
          "$ref" : "#/definitions/RecipientPISForeign"
        },
        "recipientBank" : {
          "$ref" : "#/definitions/Bank"
        },
        "sender" : {
          "$ref" : "#/definitions/SenderPISForeign"
        },
        "transferData" : {
          "$ref" : "#/definitions/TransferDataCurrencyRequired"
        },
        "transferCharges" : {
          "type" : "string",
          "description" : "Klauzula kosztowa / The cost clause",
          "maxLength" : 3
        },
        "deliveryMode" : {
          "type" : "string",
          "description" : "Tryb pilności / Urgency mode",
          "enum" : [ "ExpressD0", "UrgentD1", "StandardD2" ]
        },
        "system" : {
          "type" : "string",
          "description" : "Droga jaką przelew ma być rozliczony / The way the transfer should be settled",
          "enum" : [ "Swift" ]
        },
        "hold" : {
          "type" : "boolean",
          "description" : "Czy założyć blokadę (w przypadku np. zlecenia przelewu w dniu wolnym) / Indicates if payment should be holded"
        }
      },
      "xml" : {
        "name" : "RecurringNonEEAPayment"
      },
      "description" : "Struktura danych przelewu zagranicznego innego niż SEPA, użyta do zdefinowania nowej płatności cyklicznej. / Data structure of non EEA payment that is to be used to define new recurring payment."
    },
    "PaymentTaxRequest" : {
      "type" : "object",
      "required" : [ "deliveryMode", "recipient", "requestHeader", "sender", "system", "tppTransactionId", "transferData" ],
      "properties" : {
        "requestHeader" : {
          "$ref" : "#/definitions/RequestHeaderCallback"
        },
        "recipient" : {
          "$ref" : "#/definitions/RecipientPISTax"
        },
        "sender" : {
          "$ref" : "#/definitions/SenderPISDomestic"
        },
        "transferData" : {
          "$ref" : "#/definitions/TransferDataCurrencyRequiredTax"
        },
        "usInfo" : {
          "$ref" : "#/definitions/TransactionInfoTax"
        },
        "tppTransactionId" : {
          "type" : "string",
          "description" : "ID transakcji nadany przez TPP / Transaction ID (TPP)",
          "maxLength" : 64
        },
        "deliveryMode" : {
          "type" : "string",
          "description" : "Tryb pilności / Urgency mode",
          "enum" : [ "ExpressD0", "StandardD1" ]
        },
        "system" : {
          "type" : "string",
          "description" : "Droga jaką przelew ma być rozliczony / The way the transfer should be settled",
          "enum" : [ "Elixir", "ExpressElixir" ]
        },
        "hold" : {
          "type" : "boolean",
          "description" : "Czy założyć blokadę (w przypadku np. zlecenia przelewu w dniu wolnym) / Indicates if payment should be holded"
        },
        "executionMode" : {
          "type" : "string",
          "description" : "Tryb realizacji płatności. Nadrzędna informacja decydująca o tym w jakim trybie zostanie zrealizowana płatność. / Payment execution mode. The superior information deciding which mode is to be used to execute payment.",
          "enum" : [ "Immediate", "FutureDated" ]
        }
      },
      "xml" : {
        "name" : "PaymentTaxRequest"
      },
      "description" : "Klasa zlecenia przelewu podatkowego / Tax Transfer Request Class"
    },
    "PaymentTaxRequestBundled" : {
      "type" : "object",
      "required" : [ "deliveryMode", "recipient", "sender", "system", "tppTransactionId", "transferData" ],
      "properties" : {
        "recipient" : {
          "$ref" : "#/definitions/RecipientPISTax"
        },
        "sender" : {
          "$ref" : "#/definitions/SenderPISDomestic"
        },
        "transferData" : {
          "$ref" : "#/definitions/TransferDataCurrencyRequiredTax"
        },
        "usInfo" : {
          "$ref" : "#/definitions/TransactionInfoTax"
        },
        "tppTransactionId" : {
          "type" : "string",
          "description" : "ID transakcji nadany przez TPP / Transaction ID (TPP)",
          "maxLength" : 64
        },
        "deliveryMode" : {
          "type" : "string",
          "description" : "Tryb pilności / Urgency mode",
          "enum" : [ "ExpressD0", "StandardD1" ]
        },
        "system" : {
          "type" : "string",
          "description" : "Droga jaką przelew ma być rozliczony / The way the transfer should be settled",
          "enum" : [ "Elixir", "ExpressElixir" ]
        },
        "hold" : {
          "type" : "boolean",
          "description" : "Czy założyć blokadę (w przypadku np. zlecenia przelewu w dniu wolnym) / Indicates if payment should be holded"
        },
        "executionMode" : {
          "type" : "string",
          "description" : "Tryb realizacji płatności. Nadrzędna informacja decydująca o tym w jakim trybie zostanie zrealizowana płatność. / Payment execution mode. The superior information deciding which mode is to be used to execute payment.",
          "enum" : [ "Immediate", "FutureDated" ]
        }
      },
      "xml" : {
        "name" : "PaymentTaxRequestBundled"
      },
      "description" : "Klasa zlecenia przelewu podatkowego w ramach paczki / Tax Transfer inside bundle Request Class"
    },
    "RecurringTaxPayment" : {
      "type" : "object",
      "required" : [ "deliveryMode", "recipient", "sender", "system", "transferData" ],
      "properties" : {
        "recipient" : {
          "$ref" : "#/definitions/RecipientPISTax"
        },
        "sender" : {
          "$ref" : "#/definitions/SenderPISDomestic"
        },
        "transferData" : {
          "$ref" : "#/definitions/TransferDataCurrencyRequiredTax"
        },
        "usInfo" : {
          "$ref" : "#/definitions/TransactionInfoTax"
        },
        "deliveryMode" : {
          "type" : "string",
          "description" : "Tryb pilności / Urgency mode",
          "enum" : [ "ExpressD0", "StandardD1" ]
        },
        "system" : {
          "type" : "string",
          "description" : "Droga jaką przelew ma być rozliczony / The way the transfer should be settled",
          "enum" : [ "Elixir", "ExpressElixir" ]
        },
        "hold" : {
          "type" : "boolean",
          "description" : "Czy założyć blokadę (w przypadku np. zlecenia przelewu w dniu wolnym) / Indicates if payment should be holded"
        }
      },
      "xml" : {
        "name" : "RecurringTaxPayment"
      },
      "description" : "Struktura danych przelewu do urzędu podatkowego, użyta do zdefinowania nowej płatności cyklicznej. / Data structure of tax payment that is to be used to define new recurring payment."
    },
    "PaymentRequest" : {
      "required" : [ "requestHeader" ],
      "properties" : {
        "requestHeader" : {
          "$ref" : "#/definitions/RequestHeader"
        },
        "paymentId" : {
          "type" : "string",
          "description" : "Identyfikator płatności. Wymagany warunkowo - jeśli TPP otrzymał ten identyfikator od ASPSP. / Identifier of the payment. Conditionally required - in case TPP has received this identifier from ASPSP.",
          "maxLength" : 64
        },
        "tppTransactionId" : {
          "type" : "string",
          "description" : "Identyfikator transakcji nadany przez TPP. Wymagany warunkowo - jeśli TPP nie otrzymał identyfikatora paymentId od ASPSP. / Identifier of transaction established by TPP. Conditionally required - in case TPP has not received paymentId from ASPSP.",
          "maxLength" : 64
        }
      },
      "xml" : {
        "name" : "PaymentRequest"
      },
      "description" : "Klasa zapytania o status płatności / Payment Request Class"
    },
    "BundleRequest" : {
      "required" : [ "requestHeader", "transactionsIncluded" ],
      "properties" : {
        "requestHeader" : {
          "$ref" : "#/definitions/RequestHeader"
        },
        "bundleId" : {
          "type" : "string",
          "description" : "Identyfikator paczki przelewów. Wymagany warunkowo - jeśli TPP otrzymał ten identyfikator od ASPSP. / Bundle of payments identifier.Conditionally required - in case TPP has received this identifier from ASPSP.",
          "maxLength" : 64
        },
        "tppBundleId" : {
          "type" : "string",
          "description" : "Identyfikator paczki przelewów nadany przez TPP. Wymagany warunkowo - jeśli TPP nie otrzymał identyfikatora bundleId od ASPSP. / Bundle of payments identifier set by TPP. Conditionally required - in case TPP has not received bundleId from ASPSP.",
          "maxLength" : 64
        },
        "transactionsIncluded" : {
          "type" : "boolean",
          "description" : "(true / false) Znacznik oznaczający czy w odpowiedzi mają być uwzględnione statusy transakcji wchodzące w skład paczki / Indicates if statuses of payments from the bundle should be included"
        }
      },
      "xml" : {
        "name" : "BundleRequest"
      },
      "description" : "Klasa zapytania o status paczki płatności / Bundle Request Class"
    },
    "RecurringPaymentStatusRequest" : {
      "required" : [ "requestHeader" ],
      "properties" : {
        "requestHeader" : {
          "$ref" : "#/definitions/RequestHeader"
        },
        "recurringPaymentId" : {
          "type" : "string",
          "description" : "Identyfikator płatności cyklicznej nadany przez ASPSP. Wymagany warunkowo - jeśli TPP otrzymał ten identyfikator od ASPSP. / Recurring payment identifier set by ASPSP. Conditionally required - in case TPP has received this identifier from ASPSP.",
          "maxLength" : 64
        },
        "tppRecurringPaymentId" : {
          "type" : "string",
          "description" : "Identyfikator płatności cyklicznej nadany przez TPP. Wymagany warunkowo - jeśli TPP nie otrzymał identyfikatora recurringPaymentId od ASPSP. / Recurring payment identifier set by TPP. Conditionally required - in case TPP has not received recurringPaymentId from ASPSP.",
          "maxLength" : 64
        }
      },
      "xml" : {
        "name" : "RecurringPaymentStatusRequest"
      },
      "description" : "Klasa zapytania o status płatności cyklicznej / Recurring payment status Request Class"
    },
    "PaymentsBundleRequest" : {
      "type" : "object",
      "required" : [ "requestHeader", "tppBundleId", "transfersTotalAmount", "typeOfTransfers" ],
      "properties" : {
        "requestHeader" : {
          "$ref" : "#/definitions/RequestHeaderCallback"
        },
        "tppBundleId" : {
          "type" : "string",
          "description" : "Identyfikator paczki przelewów nadany przez TPP / Bundle of payments identifier set by TPP",
          "maxLength" : 64
        },
        "transfersTotalAmount" : {
          "type" : "string",
          "description" : "Łączna kwota wszystkich przelewów z paczki / The total amount of all transfers from bundle",
          "pattern" : "^(0|([1-9][0-9]{0,}))\\.\\d{2}$"
        },
        "typeOfTransfers" : {
          "type" : "string",
          "description" : "Typ przelewów, które zostaną zlecone w ramach paczki / The type of transfers that will be initiated through the bundle",
          "enum" : [ "domestic", "EEA", "nonEEA", "tax" ]
        },
        "domesticTransfers" : {
          "type" : "array",
          "description" : "Lista struktur danych przelewów zwykłych, które zostaną zlecone. Wymagane gdy typeOfTransfers = domestic. / The list of data structures of domestic transfers to be initiated. Required when typeOfTransfers = domestic.",
          "items" : {
            "$ref" : "#/definitions/PaymentDomesticRequestBundled"
          }
        },
        "EEATransfers" : {
          "type" : "array",
          "description" : "Lista struktur danych przelewów zagranicznych SEPA, które zostaną zlecone. Wymagane gdy typeOfTransfers = EEA. / The list of data structures of SEPA foreign transfers to be initiated. Required when typeOfTransfers = EEA.",
          "items" : {
            "$ref" : "#/definitions/PaymentEEARequestBundled"
          }
        },
        "nonEEATransfers" : {
          "type" : "array",
          "description" : "Lista struktur danych przelewów zagranicznych innych niż SEPA, które zostaną zlecone. Wymagane gdy typeOfTransfers = nonEEA. / The list of data structures of non SEPA foreign transfers to be initiated. Required when typeOfTransfers = nonEEA.",
          "items" : {
            "$ref" : "#/definitions/PaymentNonEEARequestBundled"
          }
        },
        "taxTransfers" : {
          "type" : "array",
          "description" : "Lista struktur danych przelewów do urzędu podatkowego, które zostaną zlecone. Wymagane gdy typeOfTransfers = tax. / The list of data structures of tax transfers to be initiated. Required when typeOfTransfers = tax.",
          "items" : {
            "$ref" : "#/definitions/PaymentTaxRequestBundled"
          }
        }
      },
      "xml" : {
        "name" : "PaymentsBundleRequest"
      },
      "description" : "Klasa zlecenia paczki przelewów / Bundle of payments Request Class"
    },
    "RecurringPaymentRequest" : {
      "type" : "object",
      "required" : [ "recurrence", "requestHeader", "tppRecurringPaymentId", "typeOfPayment" ],
      "properties" : {
        "requestHeader" : {
          "$ref" : "#/definitions/RequestHeaderCallback"
        },
        "tppRecurringPaymentId" : {
          "type" : "string",
          "description" : "Identyfikator płatności cyklicznej nadany przez TPP / Recurring payment identifier set by TPP",
          "maxLength" : 64
        },
        "recurrence" : {
          "$ref" : "#/definitions/RecurringTransferParameters"
        },
        "typeOfPayment" : {
          "type" : "string",
          "description" : "Typ przelewu, który zostanie wykorzystany do zdefiniowania nowej płatności cyklicznej  / The type of payment that is to be used to define new recurring payment",
          "enum" : [ "domestic", "EEA", "nonEEA", "tax" ]
        },
        "domesticPayment" : {
          "$ref" : "#/definitions/RecurringDomesticPayment"
        },
        "EEAPayment" : {
          "$ref" : "#/definitions/RecurringEEAPayment"
        },
        "nonEEAPayment" : {
          "$ref" : "#/definitions/RecurringNonEEAPayment"
        },
        "taxPayment" : {
          "$ref" : "#/definitions/RecurringTaxPayment"
        }
      },
      "xml" : {
        "name" : "RecurringPaymentRequest"
      },
      "description" : "Klasa zlecenia zdefiniowania nowej płatności cyklicznej / Recurring payment definition Request Class"
    },
    "PaymentsBundleResponse" : {
      "required" : [ "responseHeader" ],
      "properties" : {
        "responseHeader" : {
          "$ref" : "#/definitions/ResponseHeader"
        },
        "bundleId" : {
          "type" : "string",
          "description" : "Identyfikator paczki przelewów / Bundle of payments identifier",
          "maxLength" : 64
        },
        "bundleStatus" : {
          "type" : "string",
          "description" : "Status paczki przelewów / Bundle of payments status",
          "enum" : [ "inProgress", "cancelled", "done", "partiallyDone" ]
        },
        "bundleDetailedStatus" : {
          "type" : "string",
          "description" : "Szczegółowy status paczki przelewów / Bundle of payments detailed status"
        },
        "payments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PaymentInfo"
          }
        }
      },
      "xml" : {
        "name" : "PaymentsBundleResponse"
      },
      "description" : "Klasa odpowiedzi na żądanie inicjacji paczki przelewów. Zawiera dane o statusach poszczególnych przelewów oraz status paczki. / Class describing statuses of each payment inside the bundle and the bundle itself."
    },
    "RecurringPaymentResponse" : {
      "required" : [ "responseHeader" ],
      "properties" : {
        "responseHeader" : {
          "$ref" : "#/definitions/ResponseHeader"
        },
        "recurringPaymentId" : {
          "type" : "string",
          "description" : "Identyfikator płatności cyklicznej nadany przez ASPSP / Recurring payment identifier set by ASPSP",
          "maxLength" : 64
        },
        "recurrence" : {
          "$ref" : "#/definitions/RecurringTransferParameters"
        },
        "recurringPaymentStatus" : {
          "type" : "string",
          "description" : "Status płatności cyklicznej / Status of recurring payment",
          "enum" : [ "submitted", "inProgress", "cancelled", "close" ]
        },
        "recurringPaymentDetailedStatus" : {
          "type" : "string",
          "description" : "Szczegółowy status płatności cyklicznej / Recurring payment detailed status"
        }
      },
      "xml" : {
        "name" : "RecurringPaymentResponse"
      },
      "description" : "Klasa odpowiedzi na żądanie zdefiniowania nowej płatności cyklicznej. / Data returned for the request of creation of new recurring payment"
    },
    "CancelPaymentsRequest" : {
      "required" : [ "requestHeader" ],
      "properties" : {
        "requestHeader" : {
          "$ref" : "#/definitions/RequestHeader"
        },
        "paymentId" : {
          "type" : "string",
          "description" : "Identyfikator płatności / Payment ID",
          "maxLength" : 64
        },
        "bundleId" : {
          "type" : "string",
          "description" : "Identyfikator paczki przelewów / Bundle of payments ID"
        }
      },
      "xml" : {
        "name" : "CancelPaymentsRequest"
      },
      "description" : "Klasa zapytania o odwołanie przelewu lub paczki przelewów.  Wymagany warunkowo jeden z atrybutów - transactionId lub bundleId / Payment or bundle of payments cancelation request class. One of the following attributes is required: transactionId or bundleId"
    },
    "CancelRecurringPaymentRequest" : {
      "required" : [ "recurringPaymentId", "requestHeader" ],
      "properties" : {
        "requestHeader" : {
          "$ref" : "#/definitions/RequestHeader"
        },
        "recurringPaymentId" : {
          "type" : "string",
          "description" : "Identyfikator płatności cyklicznej nadany przez ASPSP / Recurring payment identifier set by ASPSP",
          "maxLength" : 64
        }
      },
      "xml" : {
        "name" : "CancelRecurringPaymentRequest"
      },
      "description" : "Klasa zapytania o anulowanie płatności cyklicznej. / Recurring payment cancelation request class."
    },
    "CancelPaymentsResponse" : {
      "required" : [ "responseHeader" ],
      "properties" : {
        "responseHeader" : {
          "$ref" : "#/definitions/ResponseHeader"
        },
        "payments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PaymentInfo"
          }
        }
      },
      "xml" : {
        "name" : "CancelPaymentsResponse"
      },
      "description" : "Klasa odpowiedzi na żądanie odwołania przelewów. Zawiera dane przelewów, które nie mogły być odwołane. / Class describing payments that could not have been cancelled."
    },
    "CancelRecurringPaymentResponse" : {
      "required" : [ "recurringPaymentId", "responseHeader", "tppRecurringPaymentId" ],
      "properties" : {
        "responseHeader" : {
          "$ref" : "#/definitions/ResponseHeader"
        },
        "recurringPaymentId" : {
          "type" : "string",
          "description" : "Identyfikator płatności cyklicznej nadany przez APSP / Recurring payment identifier set by ASPSP",
          "maxLength" : 64
        },
        "tppRecurringPaymentId" : {
          "type" : "string",
          "description" : "Identyfikator płatności cyklicznej nadany przez TPP. / Recurring payment identifier set by TPP.",
          "maxLength" : 64
        },
        "recurringPaymentStatus" : {
          "type" : "string",
          "description" : "Status płatności cyklicznej / Recurring payment status",
          "enum" : [ "submitted", "inProgress", "cancelled", "close" ]
        },
        "recurringPaymentDetailedStatus" : {
          "type" : "string",
          "description" : "Szczegółowy status płatności cyklicznej / Recurring payment detailed status"
        }
      },
      "description" : "Klasa odpowiedzi na żądanie anulowania płatności cyklicznej / Cancel recurring payment response class"
    },
    "PaymentsRequest" : {
      "required" : [ "payments", "requestHeader" ],
      "properties" : {
        "requestHeader" : {
          "$ref" : "#/definitions/RequestHeaderWithoutToken"
        },
        "payments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PaymentTokenEntry"
          }
        }
      },
      "xml" : {
        "name" : "PaymentsRequest"
      },
      "description" : "Klasa zapytania o statusy wielu płatności / Payments Request Class"
    },
    "PaymentTokenEntry" : {
      "required" : [ "accessToken" ],
      "properties" : {
        "paymentId" : {
          "type" : "string",
          "description" : "Identyfikator płatności. Wymagany warunkowo - jeśli TPP otrzymał ten identyfikator od ASPSP. / Identifier of the payment. Conditionally required - in case TPP has received this identifier from ASPSP.",
          "maxLength" : 64
        },
        "tppTransactionId" : {
          "type" : "string",
          "description" : "Identyfikator transakcji nadany przez TPP. Wymagany warunkowo - jeśli TPP nie otrzymał identyfikatora paymentId od ASPSP. / Identifier of transaction established by TPP. Conditionally required - in case TPP has not received paymentId from ASPSP.",
          "maxLength" : 64
        },
        "accessToken" : {
          "type" : "string",
          "description" : "Access token użyty do zainicjowania płatności / Access token used to initiate payment"
        }
      },
      "description" : "Klasa opisująca informacje wymagane do pobrania informacji o statusie zainicjowanej płatności w ramach zapytania zbiorczego / Class defining a pair of information required to retreive the status of initiated payment"
    },
    "AddPaymentResponse" : {
      "required" : [ "detailedStatus", "generalStatus", "paymentId", "responseHeader" ],
      "properties" : {
        "responseHeader" : {
          "$ref" : "#/definitions/ResponseHeader"
        },
        "paymentId" : {
          "type" : "string",
          "description" : "Identyfiaktor płatności / Payment ID"
        },
        "generalStatus" : {
          "$ref" : "#/definitions/PaymentStatus"
        },
        "detailedStatus" : {
          "type" : "string",
          "description" : "Status płatności / Detailed payment status"
        }
      },
      "description" : "Klasa odpowiedzi zlecenia płatności / Payment Add Response Class"
    },
    "PaymentInfo" : {
      "required" : [ "detailedStatus", "executionMode", "generalStatus", "paymentId", "tppTransactionId" ],
      "properties" : {
        "paymentId" : {
          "type" : "string",
          "description" : "Identyfiaktor płatności / Payment ID"
        },
        "tppTransactionId" : {
          "type" : "string",
          "description" : "ID transakcji nadany przez TPP / Transaction ID (TPP)"
        },
        "generalStatus" : {
          "$ref" : "#/definitions/PaymentStatus"
        },
        "detailedStatus" : {
          "type" : "string",
          "description" : "Szczegółowy status płatności / Detailed payment status"
        },
        "executionMode" : {
          "type" : "string",
          "description" : "Tryb realizacji płatności. Nadrzędna informacja decydująca o tym w jakim trybie zostanie zrealizowana płatność. / Payment execution mode. The superior information deciding which mode is to be used to execute payment.",
          "enum" : [ "Immediate", "FutureDated" ]
        }
      },
      "description" : "Klasa informacji o płatności / Payment Information Class"
    },
    "GetPaymentResponse" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PaymentInfo"
      }, {
        "type" : "object",
        "required" : [ "responseHeader" ],
        "properties" : {
          "responseHeader" : {
            "$ref" : "#/definitions/ResponseHeader"
          }
        }
      } ],
      "description" : "Klasa odpowiedzi na pytanie o płatność / Payment Get Response Class"
    },
    "BundleResponse" : {
      "required" : [ "bundleId", "responseHeader", "tppBundleId" ],
      "properties" : {
        "responseHeader" : {
          "$ref" : "#/definitions/ResponseHeader"
        },
        "bundleId" : {
          "type" : "string",
          "description" : "Identyfikator paczki przelewów / Bundle of payments identifier",
          "maxLength" : 64
        },
        "tppBundleId" : {
          "type" : "string",
          "description" : "Identyfikator paczki przelewów nadany przez TPP. / Bundle of payments identifier set by TPP.",
          "maxLength" : 64
        },
        "bundleStatus" : {
          "type" : "string",
          "description" : "Status paczki przelewów / Bundle of payments status",
          "enum" : [ "inProgress", "cancelled", "done", "partiallyDone" ]
        },
        "bundleDetailedStatus" : {
          "type" : "string",
          "description" : "Szczegółowy status paczki przelewów / Bundle of payments detailed status"
        },
        "payments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PaymentInfo"
          }
        }
      },
      "description" : "Klasa odpowiedzi na pytanie o status paczki płatności / Response data with status of bundle of payments"
    },
    "RecurringPaymentStatusResponse" : {
      "required" : [ "recurringPaymentId", "responseHeader", "tppRecurringPaymentId" ],
      "properties" : {
        "responseHeader" : {
          "$ref" : "#/definitions/ResponseHeader"
        },
        "recurringPaymentId" : {
          "type" : "string",
          "description" : "Identyfikator płatności cyklicznej nadany przez APSP / Recurring payment identifier set by ASPSP",
          "maxLength" : 64
        },
        "tppRecurringPaymentId" : {
          "type" : "string",
          "description" : "Identyfikator płatności cyklicznej nadany przez TPP. / Recurring payment identifier set by TPP.",
          "maxLength" : 64
        },
        "recurringPaymentStatus" : {
          "type" : "string",
          "description" : "Status płatności cyklicznej / Recurring payment status",
          "enum" : [ "submitted", "inProgress", "cancelled", "close" ]
        },
        "recurringPaymentDetailedStatus" : {
          "type" : "string",
          "description" : "Szczegółowy status płatności cyklicznej / Recurring payment detailed status"
        }
      },
      "description" : "Klasa odpowiedzi na pytanie o status płatności cyklicznej / Response data with status of recurring payment"
    },
    "PaymentsResponse" : {
      "required" : [ "responseHeader" ],
      "properties" : {
        "responseHeader" : {
          "$ref" : "#/definitions/ResponseHeader"
        },
        "payments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PaymentInfo"
          }
        }
      },
      "description" : "Klasa odpowiedzi na pytanie o wiele płatności"
    },
    "ConfirmationOfFundsRequest" : {
      "type" : "object",
      "required" : [ "accountNumber", "amount", "currency", "requestHeader" ],
      "properties" : {
        "requestHeader" : {
          "$ref" : "#/definitions/RequestHeaderWithoutToken"
        },
        "accountNumber" : {
          "type" : "string",
          "description" : "Numer konta / Account number",
          "maxLength" : 34
        },
        "amount" : {
          "type" : "string",
          "description" : "Wielkość środków której dotyczy zaptanie / Amount of the transaction",
          "pattern" : "^(0|([1-9][0-9]{0,}))\\.\\d{2}$"
        },
        "currency" : {
          "type" : "string",
          "description" : "Kod ISO Waluty (waluta transakcji) / Currency of transaction (ISO)",
          "maxLength" : 3
        }
      },
      "xml" : {
        "name" : "ConfirmationOfFundsRequest"
      },
      "description" : "Klasa zapytania o dostępne środki płatnicze na rachunku / Confirmation of Funds Request Class"
    },
    "ConfirmationOfFundsResponse" : {
      "required" : [ "fundsAvailable", "responseHeader" ],
      "properties" : {
        "responseHeader" : {
          "$ref" : "#/definitions/ResponseHeader"
        },
        "fundsAvailable" : {
          "type" : "boolean",
          "description" : "Status - Czy środki są dostępne / Status - are funds available"
        }
      },
      "description" : "Klasa odpowiedzi na zapytanie o dostępne środki płatnicze na rachunku / Confirmation of Funds Response Class"
    },
    "Error" : {
      "properties" : {
        "responseHeader" : {
          "$ref" : "#/definitions/ResponseHeader"
        },
        "code" : {
          "type" : "string",
          "description" : "Kod błędu / Error code"
        },
        "message" : {
          "type" : "string",
          "description" : "Opis błędu / Error message"
        }
      },
      "description" : "Klasa zawierająca informacje o zwracanym błędzie / Error class"
    },
    "AccountNumber" : {
      "type" : "string",
      "maxLength" : 34,
      "description" : "Numer konta"
    },
    "AccountForeign" : {
      "type" : "string",
      "maxLength" : 34,
      "description" : "Numer konta, format dla przelewów zagranicznych"
    },
    "RequestHeaderWithoutToken" : {
      "type" : "object",
      "required" : [ "requestId" ],
      "properties" : {
        "requestId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1) zgodnym ze standardem RFC 4122 / Request ID using UUID format (Variant 1, Version 1) described in RFC 4122 standard"
        },
        "userAgent" : {
          "type" : "string",
          "description" : "Browser agent dla PSU / PSU browser agent"
        },
        "ipAddress" : {
          "type" : "string",
          "description" : "Adres IP końcowego urządzenia PSU. Wymagany dla isDirectPsu=true. / IP address of PSU's terminal device. Required when isDirectPsu=true."
        },
        "sendDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Oryginalna data wysłania, format: YYYY-MM-DDThh:mm:ss[.mmm] / Send date"
        },
        "tppId" : {
          "type" : "string",
          "description" : "Identyfikator TPP / TPP ID"
        }
      },
      "description" : "Klasa zawierająca informacje o PSU / PSU Information Class"
    },
    "RequestHeaderWithoutTokenAS" : {
      "allOf" : [ {
        "$ref" : "#/definitions/RequestHeaderWithoutToken"
      }, {
        "type" : "object",
        "properties" : {
          "isCompanyContext" : {
            "type" : "boolean",
            "description" : "(true / false) Znacznik oznaczający czy żądanie jest wysyłane w kontekście PSU korporacyjnego"
          },
          "psuIdentifierType" : {
            "type" : "string",
            "description" : "Typ identyfikatora PSU, służy do wskazania przez TPP na podstawie jakiej informacji zostanie zidentyfikowany PSU, który będzie podlegał uwierzytelnieniu. Wartość słownikowa. / PSU identifier type, used by TPP to indicate type of information based on which the PSU is to be authenticated. Dictionary value."
          },
          "psuIdentifierValue" : {
            "type" : "string",
            "description" : "Wartość identyfikatora PSU. Wymagany warunkowo - w przypadku gdy została przekazana niepusta wartość typu identyfikatora PSU. / The value of the PSU's identifier. Required conditionally - in case non empty value of PSU identifier type was passed."
          },
          "psuContextIdentifierType" : {
            "type" : "string",
            "description" : "Typ identyfikatora kontekstu w jakim występuje PSU. Wartość słownikowa. Wymagany warunkowo - w przypadku wysyłania żądania dla takiego PSU, który może występować w więcej niż jednym kontekście w wybranym ASPSP. / Identifier of context that is used by PSU. Dictionary value. Required conditionally - in case context of the request is used and PSU may use more then one context for the ASPSP."
          },
          "psuContextIdentifierValue" : {
            "type" : "string",
            "description" : "Wartość identyfikatora kontekstu w jakim występuje PSU. Wymagany warunkowo - w przypadku wysyłania żądania dla takiego PSU, który może występować w więcej niż jednym kontekście w wybranym ASPSP. / The value of context that is used by PSU. Required conditionally - in case context of the request is used and PSU may use more then one context for the ASPSP."
          }
        }
      } ],
      "description" : "Klasa zawierająca informacje o PSU na potrzeby usług autoryzacji / PSU Information Class dedicated for authorization services"
    },
    "RequestHeaderWithoutTokenCallbackAS" : {
      "allOf" : [ {
        "$ref" : "#/definitions/RequestHeaderWithoutTokenAS"
      }, {
        "type" : "object",
        "properties" : {
          "callbackURL" : {
            "type" : "string",
            "description" : "adres funkcji zwrotnej / callback URL"
          },
          "apiKey" : {
            "type" : "string",
            "description" : "API key dla wywołania funkcji zwrotnej / callback API key"
          }
        }
      } ],
      "description" : "Klasa zawierająca informacje o PSU and callback URL / PSU and callback URL Information Class"
    },
    "RequestHeaderCallback" : {
      "allOf" : [ {
        "$ref" : "#/definitions/RequestHeaderWithoutToken"
      }, {
        "type" : "object",
        "required" : [ "token" ],
        "properties" : {
          "token" : {
            "type" : "string",
            "description" : "Token autoryzacyjny / Authorization token"
          },
          "callbackURL" : {
            "type" : "string",
            "description" : "adres funkcji zwrotnej / callback URL"
          },
          "apiKey" : {
            "type" : "string",
            "description" : "API key dla wywołania funkcji zwrotnej / callback API key"
          }
        }
      } ],
      "description" : "Klasa zawierająca informacje o PSU and callback URL / PSU and callback URL Information Class"
    },
    "RequestHeader" : {
      "allOf" : [ {
        "$ref" : "#/definitions/RequestHeaderWithoutToken"
      }, {
        "type" : "object",
        "required" : [ "token" ],
        "properties" : {
          "token" : {
            "type" : "string",
            "description" : "Token autoryzacyjny / Authorization token"
          }
        }
      } ],
      "description" : "Klasa zawierająca informacje o PSU / PSU Information Class"
    },
    "RequestHeaderAIS" : {
      "allOf" : [ {
        "$ref" : "#/definitions/RequestHeaderWithoutToken"
      }, {
        "type" : "object",
        "required" : [ "token" ],
        "properties" : {
          "token" : {
            "type" : "string",
            "description" : "Token autoryzacyjny / Authorization token"
          },
          "isDirectPsu" : {
            "type" : "boolean",
            "description" : "(true/false) Znacznik informujący czy request jest przesłany bezpośrednio przez PSU. Domyślna wartość to false. / Is request sent by PSU directly. false is default value."
          }
        }
      } ],
      "description" : "Klasa zawierająca informacje o PSU / PSU Information Class"
    },
    "RequestHeaderAISCallback" : {
      "allOf" : [ {
        "$ref" : "#/definitions/RequestHeaderWithoutToken"
      }, {
        "type" : "object",
        "required" : [ "token" ],
        "properties" : {
          "token" : {
            "type" : "string",
            "description" : "Token autoryzacyjny / Authorization token"
          },
          "isDirectPsu" : {
            "type" : "boolean",
            "description" : "(true/false) Znacznik informujący czy request jest przesłany bezpośrednio przez PSU. Domyślna wartość to false. / Is request sent by PSU directly. false is default value."
          },
          "callbackURL" : {
            "type" : "string",
            "description" : "adres funkcji zwrotnej / callback URL"
          },
          "apiKey" : {
            "type" : "string",
            "description" : "API key dla wywołania funkcji zwrotnej / callback API key"
          }
        }
      } ],
      "description" : "Klasa zawierająca informacje o PSU and callback URL / PSU and callback URL Information Class"
    },
    "ResponseHeader" : {
      "properties" : {
        "requestId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Identyfikator żądania otrzymanego od TPP / Identifier of request received from TPP"
        },
        "sendDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data odpowiedzi, format: YYYY-MM-DDThh:mm:ss[.mmm] / Send date"
        },
        "isCallback" : {
          "type" : "boolean",
          "description" : "Znacznik określający czy odpowiedz zostanie przekazana w formie wywołania zwrotnego. true - gdy odpowiedz w formie wywołania zwrotnego. Inna dopuszczalna wartość to false."
        }
      },
      "description" : "Klasa zawierająca zwrotne metadane / Metadata Class"
    },
    "SenderPISForeign" : {
      "properties" : {
        "accountNumber" : {
          "$ref" : "#/definitions/AccountNumber"
        },
        "nameAddress" : {
          "$ref" : "#/definitions/NameAddress"
        }
      },
      "description" : "Klasa zawierająca dane nadawcy przelewu zagranicznego używana w żądaniach PIS / Foreign PIS services Sender Data Class"
    },
    "SenderPISDomestic" : {
      "properties" : {
        "accountNumber" : {
          "$ref" : "#/definitions/AccountNumber"
        },
        "nameAddress" : {
          "$ref" : "#/definitions/NameAddress"
        }
      },
      "description" : "Klasa zawierająca dane nadawcy przelewu krajowego używana w żądaniach PIS / Domestic PIS services Sender Data Class"
    },
    "Bank" : {
      "properties" : {
        "bicOrSwift" : {
          "type" : "string",
          "description" : "Numer BIC/SWIFT Banku / BIC/SWIFT number",
          "maxLength" : 11
        },
        "name" : {
          "type" : "string",
          "description" : "Nazwa Banku / Bank's name",
          "maxLength" : 70
        },
        "code" : {
          "type" : "string",
          "description" : "Kod Banku, dla przelewów zagranicznych / Bank's code",
          "maxLength" : 10
        },
        "countryCode" : {
          "type" : "string",
          "description" : "Kod kraju 3166-1 / Country code",
          "maxLength" : 3
        },
        "address" : {
          "$ref" : "#/definitions/Address"
        }
      },
      "description" : "Klasa zawierająca dane banku używana w żądaniach AIS / AIS Bank Data Class"
    },
    "BankAccountInfo" : {
      "properties" : {
        "bicOrSwift" : {
          "type" : "string",
          "description" : "Numer BIC/SWIFT Banku / BIC/SWIFT number",
          "maxLength" : 8
        },
        "name" : {
          "type" : "string",
          "description" : "Nazwa Banku / Bank's name",
          "maxLength" : 70
        },
        "address" : {
          "$ref" : "#/definitions/Address"
        }
      },
      "description" : "Klasa zawierająca dane banku / Bank Data Class"
    },
    "RecurringTransferParameters" : {
      "type" : "object",
      "required" : [ "dayOffOffsetType", "frequency", "startDate" ],
      "properties" : {
        "startDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Data wykonania pierwszej płatności w definiowanym cyklu. Format: YYYY-MM-DD / First payment execution date (of the defined cycle)."
        },
        "frequency" : {
          "$ref" : "#/definitions/RecurringTransferFrequency"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Ostatnia możliwa data wykonania płatności w definiowanym cyklu. Format: YYYY-MM-DD / The last possible payment execution date (of the defined cycle)."
        },
        "dayOffOffsetType" : {
          "type" : "string",
          "description" : "Rodzaj przesunięcia, który należy zastosować do wykonania przelewu w przypadku, gdy dzień wolny jest planowaną datą przelewu / Type of offset that should be used for transfer execution in case of day off being the planned date of transfer",
          "enum" : [ "before", "after" ]
        }
      },
      "description" : "Klasa definiująca parametry płatności cyklicznej / A class defining recurring payment parameters"
    },
    "RecurringTransferFrequency" : {
      "type" : "object",
      "required" : [ "periodType", "periodValue" ],
      "properties" : {
        "periodType" : {
          "type" : "string",
          "description" : "Typ jednostki okresu czasu / The type of unit of time period",
          "enum" : [ "day", "week", "month" ]
        },
        "periodValue" : {
          "type" : "integer",
          "description" : "Wartość jednostki okresu czasu / The value of unit of time period",
          "minimum" : 1
        }
      },
      "description" : "Klasa opisująca parametry częśtotliwości wykonywania płatności cyklicznej / A class defining parameters of the frequency of recurring paymenets"
    },
    "TransferDataBase" : {
      "type" : "object",
      "required" : [ "amount", "description" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "Pole opisujące przelew / Description",
          "maxLength" : 140
        },
        "amount" : {
          "type" : "string",
          "description" : "Kwota przelewu / Amount",
          "pattern" : "^(0|([1-9][0-9]{0,}))\\.\\d{2}$"
        },
        "executionDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Data wykonania przelewu. Wymagany pod warunkiem przekazania wartości FutureDated w atrybucie executionMode. Format: YYYY-MM-DD / Date when the transfer is to be executed (YYYY-MM-DD). Required conditionally if executionMode attribute has value FutureDated."
        }
      },
      "description" : "Bazowa klasa dla TransferData / TransferData Base Class"
    },
    "TransferDataBaseTax" : {
      "type" : "object",
      "required" : [ "amount" ],
      "properties" : {
        "amount" : {
          "type" : "string",
          "description" : "Kwota przelewu / Amount",
          "pattern" : "^(0|([1-9][0-9]{0,}))\\.\\d{2}$"
        },
        "executionDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Data wykonania przelewu. Wymagany pod warunkiem przekazania wartości FutureDated w atrybucie executionMode. Format: YYYY-MM-DD / Date when the transfer is to be executed (YYYY-MM-DD). Required conditionally if executionMode attribute has value FutureDated."
        }
      },
      "description" : "Bazowa klasa dla TransferData / TransferData Base Class"
    },
    "TransferData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransferDataBase"
      }, {
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "string",
            "description" : "Waluta / Currency",
            "maxLength" : 3
          }
        }
      } ],
      "description" : "Klasa zawierająca dane przelewu / Transfer Data Class"
    },
    "TransferDataCurrencyRequired" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransferDataBase"
      }, {
        "type" : "object",
        "required" : [ "currency" ],
        "properties" : {
          "currency" : {
            "type" : "string",
            "description" : "Waluta, domyślnie EUR przelewów zagranicznych / Currency",
            "maxLength" : 3
          }
        }
      } ],
      "description" : "Klasa zawierająca dane przelewu / Transfer Data Class"
    },
    "TransferDataCurrencyRequiredTax" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransferDataBaseTax"
      }, {
        "type" : "object",
        "required" : [ "currency" ],
        "properties" : {
          "currency" : {
            "type" : "string",
            "description" : "Waluta, wymagana wartość PLN / Currency - PLN value required",
            "maxLength" : 3
          }
        }
      } ],
      "description" : "Klasa zawierająca dane przelewu / Transfer Data Class"
    },
    "SenderRecipient" : {
      "properties" : {
        "accountNumber" : {
          "type" : "string",
          "description" : "Numer konta nadawcy/odbiorcy / Account number"
        },
        "accountMassPayment" : {
          "type" : "string",
          "description" : "Numer wirtualny rachunku odbiorcy w formacie / Virtual account name"
        },
        "bank" : {
          "$ref" : "#/definitions/Bank"
        },
        "nameAddress" : {
          "$ref" : "#/definitions/NameAddress"
        }
      },
      "description" : "Klasa zawierająca dane nadawcy/odbiorcy używana w żądaniach AIS / AIS Sender Recipient Data Class"
    },
    "RecipientPIS" : {
      "required" : [ "accountNumber", "nameAddress" ],
      "properties" : {
        "accountNumber" : {
          "$ref" : "#/definitions/AccountNumber"
        },
        "nameAddress" : {
          "$ref" : "#/definitions/NameAddress"
        }
      },
      "description" : "Klasa zawierająca dane odbiorcy używana w żądaniach PIS / PIS Recipient Data Class"
    },
    "RecipientPISTax" : {
      "required" : [ "accountNumber", "nameAddress" ],
      "properties" : {
        "accountNumber" : {
          "$ref" : "#/definitions/AccountNumber"
        },
        "nameAddress" : {
          "$ref" : "#/definitions/NameAddress"
        }
      },
      "description" : "Klasa zawierająca dane odbiorcy używana w żądaniach PIS dla operacji podatkowych / PIS Tax Recipient Data Class"
    },
    "RecipientPISForeign" : {
      "required" : [ "accountNumber", "countryCode", "nameAddress" ],
      "properties" : {
        "accountNumber" : {
          "$ref" : "#/definitions/AccountForeign"
        },
        "nameAddress" : {
          "$ref" : "#/definitions/NameAddress"
        },
        "countryCode" : {
          "type" : "string",
          "description" : "Kod kraju odbiorcy przelewu, wg normy ISO 3166-1 alfa-3 / Country code of payment recipient, ISO 3166-1 alfa-3 compliant",
          "maxLength" : 3
        }
      },
      "description" : "Klasa zawierająca dane odbiorcy używana w żądaniach PIS dla operacji zagranicznych / PIS foreign Recipient Data Class"
    },
    "Address" : {
      "type" : "array",
      "description" : "Klasa zawierająca dane adresu pocztowego / Postal address Class",
      "items" : {
        "type" : "string",
        "maxLength" : 35
      },
      "minItems" : 1,
      "maxItems" : 4
    },
    "NameAddress" : {
      "properties" : {
        "value" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "maxLength" : 35
          },
          "maxItems" : 4,
          "minItems" : 1
        }
      },
      "description" : "Klasa zawierająca dane nazwy i adresu w postaci czterech linii danych / Simple name and  postal address Class"
    },
    "PageInfo" : {
      "properties" : {
        "previousPage" : {
          "type" : "string",
          "description" : "Użyte w celu stronicowania danych: Identyfikator poprzedniej strony rezultatów / Used for paging the results. Identifier of the previous page."
        },
        "nextPage" : {
          "type" : "string",
          "description" : "Użyte w celu stronicowania danych:  Identyfikator następnej strony rezultatów / Used for paging the results. Identifier of the next page."
        }
      },
      "description" : "Klasa zawierająca dane pozwalajace na korzystanie z mechanizmu stronicowania / Paging Information Class"
    },
    "CurrencyRate" : {
      "properties" : {
        "rate" : {
          "type" : "number",
          "format" : "double",
          "description" : "Kursy przewalutowania / Currency exchange rate"
        },
        "fromCurrency" : {
          "type" : "string",
          "description" : "Waluta rachunku, kod ISO / from Currency, ISO code",
          "maxLength" : 3
        },
        "toCurrency" : {
          "type" : "string",
          "description" : "Waluta rachunku, kod ISO / to Currency, ISO code",
          "maxLength" : 3
        }
      },
      "description" : "Klasa zawierająca kursy przewalutowań / Currency rate"
    },
    "PaymentStatus" : {
      "type" : "string",
      "description" : "Słownik statusów płatności",
      "enum" : [ "submitted", "cancelled", "pending", "done", "rejected", "scheduled" ]
    },
    "Map" : {
      "type" : "object",
      "description" : "Klasa mapy <string, string> / Map (Dictionary) class",
      "additionalProperties" : {
        "type" : "string"
      }
    },
    "DictionaryItem" : {
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Kod pozycji słownika / Code"
        },
        "description" : {
          "type" : "string",
          "description" : "Opis pozycji słownika / Description"
        }
      },
      "description" : "Klasa zawierająca dane elementu/pozycji słownika / Dictionary Item Class"
    },
    "ScopeDetailsInput" : {
      "type" : "object",
      "required" : [ "consentId", "scopeGroupType", "scopeTimeLimit", "throttlingPolicy" ],
      "properties" : {
        "privilegeList" : {
          "type" : "array",
          "description" : "The list of structures describing details of consent. Conditionally required - in case of process of obtaining new consent.",
          "items" : {
            "$ref" : "#/definitions/ScopeDetailsInputPrivilegeList"
          }
        },
        "scopeGroupType" : {
          "type" : "string",
          "description" : "Type of consent",
          "enum" : [ "ais-accounts", "ais", "pis" ]
        },
        "consentId" : {
          "type" : "string",
          "description" : "Id of consent"
        },
        "scopeTimeLimit" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data ważności zgody / consent valid until, YYYY-MM-DDThh:mm:ss[.mmm]"
        },
        "throttlingPolicy" : {
          "type" : "string",
          "description" : "Throttling policy",
          "enum" : [ "psd2Regulatory" ]
        }
      },
      "description" : "Zakres, limity, parametry i czas ważności zgód, o które prosi TPP. / Scope, limits, parameters and expiration time of consents requested by TPP"
    },
    "ScopeDetailsOutput" : {
      "type" : "object",
      "required" : [ "consentId", "scopeTimeLimit", "throttlingPolicy" ],
      "properties" : {
        "privilegeList" : {
          "type" : "array",
          "description" : "The list of structures describing details of consent obtained by TPP.",
          "items" : {
            "$ref" : "#/definitions/ScopeDetailsOutputPrivilegeList"
          }
        },
        "consentId" : {
          "type" : "string",
          "description" : "Id of consent"
        },
        "scopeTimeLimit" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Data ważności zgody / consent valid until, YYYY-MM-DDThh:mm:ss[.mmm]"
        },
        "throttlingPolicy" : {
          "type" : "string",
          "description" : "Throttling policy",
          "enum" : [ "psd2Regulatory" ]
        }
      },
      "description" : "Zakres, limity, parametry i czas ważności zgód, które potwierdza ASPSP / Scope, limits, parameters and expiration time of consents that are confimed by ASPSP",
      "example" : {
        "consentId" : "consentId",
        "resource" : {
          "accounts" : [ "accounts", "accounts" ]
        },
        "scopeTimeLimit" : "scopeTimeLimit",
        "throttlingPolicy" : "psd2Regulatory",
        "privilegeList" : {
          "ais:getTransactionsDone" : {
            "scopeUsageLimit" : "single",
            "maxAllowedHistoryLong" : 880
          },
          "ais:getHolds" : {
            "scopeUsageLimit" : "single",
            "maxAllowedHistoryLong" : 880
          },
          "ais:getTransactionsRejected" : {
            "scopeUsageLimit" : "single",
            "maxAllowedHistoryLong" : 880
          },
          "ais:getTransactionsCancelled" : {
            "scopeUsageLimit" : "single",
            "maxAllowedHistoryLong" : 880
          },
          "ais:getTransactionsScheduled" : {
            "scopeUsageLimit" : "single",
            "maxAllowedHistoryLong" : 880
          },
          "ais-accounts:getAccounts" : {
            "scopeUsageLimit" : "single",
            "maxAllowedHistoryLong" : 880
          },
          "pis:tax" : {
            "scopeUsageLimit" : "single"
          },
          "pis:getPayment" : {
            "scopeUsageLimit" : "single"
          },
          "pis:domestic" : {
            "scopeUsageLimit" : "single"
          },
          "ais:getTransactionDetail" : {
            "scopeUsageLimit" : "single",
            "maxAllowedHistoryLong" : 880
          },
          "ais:getTransactionsPending" : {
            "scopeUsageLimit" : "single",
            "maxAllowedHistoryLong" : 880
          },
          "pis:bundle" : {
            "scopeUsageLimit" : "single"
          }
        }
      }
    },
    "PrivilegeAisAspspInSimple" : {
      "type" : "object",
      "properties" : {
        "scopeUsageLimit" : {
          "type" : "string",
          "description" : "Rodzaj limitu zgody / Type of limit of usages",
          "enum" : [ "single", "multiple" ]
        }
      },
      "description" : "Lista atrybutów uprawnienia usługi AIS będących przedmiotem zapytania o zgodę PSU / The list of attributes of the privilege of the AIS service that are the subject of the request for PSU's consent"
    },
    "PrivilegeAisAspspIn" : {
      "type" : "object",
      "required" : [ "maxAllowedHistoryLong" ],
      "properties" : {
        "scopeUsageLimit" : {
          "type" : "string",
          "description" : "Rodzaj limitu zgody / Type of limit of usages",
          "enum" : [ "single", "multiple" ]
        },
        "maxAllowedHistoryLong" : {
          "type" : "integer",
          "description" : "Ilość dni wstecz, liczona od momentu wysłania przez TPP żądania o pobranie historii transakcji rachunku płatnicznego, jaką może obejmować odpowiedź na to żądanie / How much account's transaction history is allowed to retrieve in days. This value should be used for calculation based on date of sending the request.",
          "minimum" : 1,
          "maximum" : 1460
        }
      },
      "description" : "Lista atrybutów uprawnienia usługi AIS będących przedmiotem zapytania o zgodę PSU / The list of attributes of the privilege of the AIS service that are the subject of the request for PSU's consent"
    },
    "PrivilegeAisAspspOutSimple" : {
      "type" : "object",
      "properties" : {
        "scopeUsageLimit" : {
          "type" : "string",
          "description" : "Rodzaj limitu zgody / Type of limit of usages",
          "enum" : [ "single", "multiple" ]
        }
      },
      "description" : "Lista atrybutów uprawnienia usługi AIS dla których została wyrażona zgoda przez PSU / The list of attributes of the privilege of the AIS service that the PSU's consent has been confirmed"
    },
    "PrivilegeAisAspspOut" : {
      "type" : "object",
      "required" : [ "maxAllowedHistoryLong" ],
      "properties" : {
        "scopeUsageLimit" : {
          "type" : "string",
          "description" : "Rodzaj limitu zgody / Type of limit of usages",
          "enum" : [ "single", "multiple" ]
        },
        "maxAllowedHistoryLong" : {
          "type" : "integer",
          "description" : "Ilość dni wstecz, liczona od momentu wysłania przez TPP żądania o pobranie historii transakcji rachunku płatnicznego, jaką może obejmować odpowiedź na to żądanie / How much account's transaction history is allowed to retrieve in days. This value should be used for calculation based on date of sending the request.",
          "minimum" : 1,
          "maximum" : 1460
        }
      },
      "description" : "Lista atrybutów uprawnienia usługi AIS dla których została wyrażona zgoda przez PSU / The list of attributes of the privilege of the AIS service that the PSU's consent has been confirmed",
      "example" : {
        "scopeUsageLimit" : "single",
        "maxAllowedHistoryLong" : 880
      }
    },
    "PrivilegePayment" : {
      "type" : "object",
      "properties" : {
        "scopeUsageLimit" : {
          "type" : "string",
          "description" : "Rodzaj limitu zgody / Type of limit of usages",
          "enum" : [ "single", "multiple" ]
        },
        "paymentId" : {
          "type" : "string",
          "description" : "Identyfikator płatności / Payment ID"
        },
        "tppTransactionId" : {
          "type" : "string",
          "description" : "Identyfikator transakcji nadany przez TPP. / Identifier of transaction established by TPP."
        }
      },
      "description" : "Lista atrybutów uprawnienia do żądania statusu płatności / The list of attributes of the payment status request privilege"
    },
    "PrivilegeBundle" : {
      "type" : "object",
      "properties" : {
        "scopeUsageLimit" : {
          "type" : "string",
          "description" : "Rodzaj limitu zgody / Type of limit of usages",
          "enum" : [ "single", "multiple" ]
        },
        "bundleId" : {
          "type" : "string",
          "description" : "Identyfikator paczki płatności / Bundle of payments ID"
        },
        "tppBundleId" : {
          "type" : "string",
          "description" : "Identyfikator paczki przelewów nadany przez TPP. / Bundle of payments identifier set by TPP."
        }
      },
      "description" : "Lista atrybutów uprawnienia do żądania statusu paczki płatności / The list of attributes of the bundle of payments status request privilege"
    },
    "PrivilegeRecurringPaymentStatus" : {
      "type" : "object",
      "properties" : {
        "scopeUsageLimit" : {
          "type" : "string",
          "description" : "Rodzaj limitu zgody / Type of limit of usages",
          "enum" : [ "single", "multiple" ]
        },
        "recurringPaymentId" : {
          "type" : "string",
          "description" : "Identyfikator płatności cyklicznej nadany przez APSP / Recurring payment identifier set by ASPSP"
        },
        "tppRecurringPaymentId" : {
          "type" : "string",
          "description" : "Identyfikator płatności cyklicznej nadany przez TPP / Recurring payment identifier set by TPP"
        }
      },
      "description" : "Lista atrybutów uprawnienia do żądania statusu płatności cyklicznej / The list of attributes of recurring payment status request privilege"
    },
    "PrivilegeDomesticTransfer" : {
      "type" : "object",
      "properties" : {
        "scopeUsageLimit" : {
          "type" : "string",
          "description" : "Rodzaj limitu zgody / Type of limit of usages",
          "enum" : [ "single", "multiple" ]
        },
        "recipient" : {
          "$ref" : "#/definitions/RecipientPIS"
        },
        "sender" : {
          "$ref" : "#/definitions/SenderPISDomestic"
        },
        "transferData" : {
          "$ref" : "#/definitions/TransferData"
        },
        "deliveryMode" : {
          "type" : "string",
          "description" : "Tryb pilności / Urgency mode",
          "enum" : [ "ExpressD0", "StandardD1" ]
        },
        "system" : {
          "type" : "string",
          "description" : "Droga jaką przelew ma być rozliczony / The way the transfer should be settled",
          "enum" : [ "Elixir", "ExpressElixir", "Sorbnet", "BlueCash", "Internal" ]
        },
        "executionMode" : {
          "type" : "string",
          "description" : "Tryb realizacji płatności. Nadrzędna informacja decydująca o tym w jakim trybie zostanie zrealizowana płatność. / Payment execution mode. The superior information deciding which mode is to be used to execute payment.",
          "enum" : [ "Immediate", "FutureDated" ]
        }
      },
      "description" : "Lista atrybutów uprawnienia do inicjacji przelewu zwykłego / The list of attributes of the domestic transfer request initiation privilege"
    },
    "PrivilegeForeignTransferEEA" : {
      "type" : "object",
      "properties" : {
        "scopeUsageLimit" : {
          "type" : "string",
          "description" : "Rodzaj limitu zgody / Type of limit of usages",
          "enum" : [ "single", "multiple" ]
        },
        "recipient" : {
          "$ref" : "#/definitions/RecipientPISForeign"
        },
        "sender" : {
          "$ref" : "#/definitions/SenderPISForeign"
        },
        "transferData" : {
          "$ref" : "#/definitions/TransferDataCurrencyRequired"
        },
        "deliveryMode" : {
          "type" : "string",
          "description" : "Tryb pilności / Urgency mode",
          "enum" : [ "ExpressD0", "StandardD1" ]
        },
        "system" : {
          "type" : "string",
          "description" : "Droga jaką przelew ma być rozliczony / The way the transfer should be settled",
          "enum" : [ "SEPA", "InstantSEPA", "Target" ]
        },
        "executionMode" : {
          "type" : "string",
          "description" : "Tryb realizacji płatności. Nadrzędna informacja decydująca o tym w jakim trybie zostanie zrealizowana płatność. / Payment execution mode. The superior information deciding which mode is to be used to execute payment.",
          "enum" : [ "Immediate", "FutureDated" ]
        }
      },
      "description" : "Lista atrybutów uprawnienia do inicjacji przelewu zagranicznego EEA / The list of attributes of the EEA foreign transfer request initiation privilege"
    },
    "PrivilegeForeignTransferNonEEA" : {
      "type" : "object",
      "properties" : {
        "scopeUsageLimit" : {
          "type" : "string",
          "description" : "Rodzaj limitu zgody / Type of limit of usages",
          "enum" : [ "single", "multiple" ]
        },
        "recipient" : {
          "$ref" : "#/definitions/RecipientPISForeign"
        },
        "recipientBank" : {
          "$ref" : "#/definitions/Bank"
        },
        "sender" : {
          "$ref" : "#/definitions/SenderPISForeign"
        },
        "transferData" : {
          "$ref" : "#/definitions/TransferDataCurrencyRequired"
        },
        "transferCharges" : {
          "type" : "string",
          "description" : "Klauzula kosztowa / The cost clause",
          "maxLength" : 3
        },
        "deliveryMode" : {
          "type" : "string",
          "description" : "Tryb pilności / Urgency mode",
          "enum" : [ "ExpressD0", "UrgentD1", "StandardD2" ]
        },
        "system" : {
          "type" : "string",
          "description" : "Droga jaką przelew ma być rozliczony / The way the transfer should be settled",
          "enum" : [ "Swift" ]
        },
        "executionMode" : {
          "type" : "string",
          "description" : "Tryb realizacji płatności. Nadrzędna informacja decydująca o tym w jakim trybie zostanie zrealizowana płatność. / Payment execution mode. The superior information deciding which mode is to be used to execute payment.",
          "enum" : [ "Immediate", "FutureDated" ]
        }
      },
      "description" : "Lista atrybutów uprawnienia do inicjacji przelewu zagranicznego bez EEA / The list of attributes of the non-EEA foreign transfer request initiation privilege"
    },
    "PrivilegeTaxTransfer" : {
      "type" : "object",
      "properties" : {
        "scopeUsageLimit" : {
          "type" : "string",
          "description" : "Rodzaj limitu zgody / Type of limit of usages",
          "enum" : [ "single", "multiple" ]
        },
        "recipient" : {
          "$ref" : "#/definitions/RecipientPISTax"
        },
        "sender" : {
          "$ref" : "#/definitions/SenderPISDomestic"
        },
        "transferData" : {
          "$ref" : "#/definitions/TransferDataCurrencyRequiredTax"
        },
        "usInfo" : {
          "$ref" : "#/definitions/TransactionInfoTax"
        },
        "deliveryMode" : {
          "type" : "string",
          "description" : "Tryb pilności / Urgency mode",
          "enum" : [ "ExpressD0", "StandardD1" ]
        },
        "system" : {
          "type" : "string",
          "description" : "Droga jaką przelew ma być rozliczony / The way the transfer should be settled",
          "enum" : [ "Elixir", "ExpressElixir" ]
        },
        "executionMode" : {
          "type" : "string",
          "description" : "Tryb realizacji płatności. Nadrzędna informacja decydująca o tym w jakim trybie zostanie zrealizowana płatność. / Payment execution mode. The superior information deciding which mode is to be used to execute payment.",
          "enum" : [ "Immediate", "FutureDated" ]
        }
      },
      "description" : "Lista atrybutów uprawnienia do inicjacji przelewu urzędu podatkowego / The list of attributes of the tax transfer request initiation privilege"
    },
    "PrivilegeCancelPayment" : {
      "type" : "object",
      "properties" : {
        "scopeUsageLimit" : {
          "type" : "string",
          "description" : "Rodzaj limitu zgody / Type of limit of usages",
          "enum" : [ "single", "multiple" ]
        },
        "paymentId" : {
          "type" : "string",
          "description" : "Identyfikator płatności / Payment ID",
          "maxLength" : 64
        },
        "bundleId" : {
          "type" : "string",
          "description" : "Identyfikator paczki przelewów / Bundle of payments ID"
        }
      },
      "description" : "Lista atrybutów uprawnienia do odwołania zainicjowanego przelewu / The list of attributes of the cancel initiated payment request privilege"
    },
    "PrivilegeCancelRecurringPayment" : {
      "type" : "object",
      "properties" : {
        "scopeUsageLimit" : {
          "type" : "string",
          "description" : "Rodzaj limitu zgody / Type of limit of usages",
          "enum" : [ "single", "multiple" ]
        },
        "recurringPaymentId" : {
          "type" : "string",
          "description" : "Identyfikator płatności cyklicznej nadany przez ASPSP / Recurring payment identifier set by ASPSP",
          "maxLength" : 64
        }
      },
      "description" : "Lista atrybutów uprawnienia do anulowania płatności cyklicznej / The list of attributes of the cancel recurring payment request privilege"
    },
    "PrivilegeBundleTransfers" : {
      "type" : "object",
      "properties" : {
        "scopeUsageLimit" : {
          "type" : "string",
          "description" : "Rodzaj limitu zgody / Type of limit of usages",
          "enum" : [ "single", "multiple" ]
        },
        "transfersTotalAmount" : {
          "type" : "string",
          "description" : "Łączna kwota wszystkich przelewów z paczki / The total amount of all transfers from bundle",
          "pattern" : "^(0|([1-9][0-9]{0,}))\\.\\d{2}$"
        },
        "typeOfTransfers" : {
          "type" : "string",
          "description" : "Typ przelewów, które zostaną zlecone w ramach paczki / The type of transfers that will be initiated through the bundle",
          "enum" : [ "domestic", "EEA", "nonEEA", "tax" ]
        },
        "domesticTransfers" : {
          "type" : "array",
          "description" : "Lista struktur danych przelewów zwykłych, które zostaną zlecone. Wymagane gdy typeOfTransfers = domestic. / The list of data structures of domestic transfers to be initiated. Required when typeOfTransfers = domestic.",
          "items" : {
            "$ref" : "#/definitions/PaymentDomesticRequestBundled"
          }
        },
        "EEATransfers" : {
          "type" : "array",
          "description" : "Lista struktur danych przelewów zagranicznych SEPA, które zostaną zlecone. Wymagane gdy typeOfTransfers = EEA. / The list of data structures of SEPA foreign transfers to be initiated. Required when typeOfTransfers = EEA.",
          "items" : {
            "$ref" : "#/definitions/PaymentEEARequestBundled"
          }
        },
        "nonEEATransfers" : {
          "type" : "array",
          "description" : "Lista struktur danych przelewów zagranicznych innych niż SEPA, które zostaną zlecone. Wymagane gdy typeOfTransfers = nonEEA. / The list of data structures of non SEPA foreign transfers to be initiated. Required when typeOfTransfers = nonEEA.",
          "items" : {
            "$ref" : "#/definitions/PaymentNonEEARequestBundled"
          }
        },
        "taxTransfers" : {
          "type" : "array",
          "description" : "Lista struktur danych przelewów do urzędu podatkowego, które zostaną zlecone. Wymagane gdy typeOfTransfers = tax. / The list of data structures of tax transfers to be initiated. Required when typeOfTransfers = tax.",
          "items" : {
            "$ref" : "#/definitions/PaymentTaxRequestBundled"
          }
        }
      },
      "description" : "Lista atrybutów uprawnienia do zainicjowania paczki przelewu / The list of attributes of the initiate bundle of payments request privilege"
    },
    "PrivilegeRecurringPayment" : {
      "type" : "object",
      "properties" : {
        "scopeUsageLimit" : {
          "type" : "string",
          "description" : "Rodzaj limitu zgody / Type of limit of usages",
          "enum" : [ "single", "multiple" ]
        },
        "recurrence" : {
          "$ref" : "#/definitions/RecurringTransferParameters"
        },
        "typeOfPayment" : {
          "type" : "string",
          "description" : "Typ przelewu, który zostanie wykorzystany do zdefiniowania nowej płatności cyklicznej  / The type of payment that is to be used to define new recurring payment",
          "enum" : [ "domestic", "EEA", "nonEEA", "tax" ]
        },
        "domesticPayment" : {
          "$ref" : "#/definitions/RecurringDomesticPayment"
        },
        "EEAPayment" : {
          "$ref" : "#/definitions/RecurringEEAPayment"
        },
        "nonEEAPayment" : {
          "$ref" : "#/definitions/RecurringNonEEAPayment"
        },
        "taxPayment" : {
          "$ref" : "#/definitions/RecurringTaxPayment"
        }
      },
      "description" : "Lista atrybutów uprawnienia do zdefiniowania nowej płatności cyklicznej / The list of attributes of definition of new recurring payment request privilege"
    },
    "ScopeDetailsInputPrivilegeList" : {
      "properties" : {
        "accountNumber" : {
          "$ref" : "#/definitions/AccountNumber"
        },
        "ais-accounts:getAccounts" : {
          "$ref" : "#/definitions/PrivilegeAisAspspInSimple"
        },
        "ais:getAccount" : {
          "$ref" : "#/definitions/PrivilegeAisAspspInSimple"
        },
        "ais:getHolds" : {
          "$ref" : "#/definitions/PrivilegeAisAspspIn"
        },
        "ais:getTransactionsDone" : {
          "$ref" : "#/definitions/PrivilegeAisAspspIn"
        },
        "ais:getTransactionsPending" : {
          "$ref" : "#/definitions/PrivilegeAisAspspIn"
        },
        "ais:getTransactionsRejected" : {
          "$ref" : "#/definitions/PrivilegeAisAspspIn"
        },
        "ais:getTransactionsCancelled" : {
          "$ref" : "#/definitions/PrivilegeAisAspspIn"
        },
        "ais:getTransactionsScheduled" : {
          "$ref" : "#/definitions/PrivilegeAisAspspIn"
        },
        "ais:getTransactionDetail" : {
          "$ref" : "#/definitions/PrivilegeAisAspspInSimple"
        },
        "pis:getPayment" : {
          "$ref" : "#/definitions/PrivilegePayment"
        },
        "pis:getBundle" : {
          "$ref" : "#/definitions/PrivilegeBundle"
        },
        "pis:domestic" : {
          "$ref" : "#/definitions/PrivilegeDomesticTransfer"
        },
        "pis:EEA" : {
          "$ref" : "#/definitions/PrivilegeForeignTransferEEA"
        },
        "pis:nonEEA" : {
          "$ref" : "#/definitions/PrivilegeForeignTransferNonEEA"
        },
        "pis:tax" : {
          "$ref" : "#/definitions/PrivilegeTaxTransfer"
        },
        "pis:cancelPayment" : {
          "$ref" : "#/definitions/PrivilegeCancelPayment"
        },
        "pis:bundle" : {
          "$ref" : "#/definitions/PrivilegeBundleTransfers"
        },
        "pis:recurring" : {
          "$ref" : "#/definitions/PrivilegeRecurringPayment"
        },
        "pis:getRecurringPayment" : {
          "$ref" : "#/definitions/PrivilegeRecurringPaymentStatus"
        },
        "pis:cancelRecurringPayment" : {
          "$ref" : "#/definitions/PrivilegeCancelRecurringPayment"
        }
      },
      "description" : "Pełna lista uprawnień będących przedmiotem zapytania o zgodę PSU / The list of all privileges that are the subject of the request for PSU's consent"
    },
    "ScopeDetailsOutputPrivilegeList" : {
      "properties" : {
        "accountNumber" : {
          "$ref" : "#/definitions/AccountNumber"
        },
        "ais-accounts:getAccounts" : {
          "$ref" : "#/definitions/PrivilegeAisAspspOutSimple"
        },
        "ais:getAccount" : {
          "$ref" : "#/definitions/PrivilegeAisAspspOutSimple"
        },
        "ais:getHolds" : {
          "$ref" : "#/definitions/PrivilegeAisAspspOut"
        },
        "ais:getTransactionsDone" : {
          "$ref" : "#/definitions/PrivilegeAisAspspOut"
        },
        "ais:getTransactionsPending" : {
          "$ref" : "#/definitions/PrivilegeAisAspspOut"
        },
        "ais:getTransactionsRejected" : {
          "$ref" : "#/definitions/PrivilegeAisAspspOut"
        },
        "ais:getTransactionsCancelled" : {
          "$ref" : "#/definitions/PrivilegeAisAspspOut"
        },
        "ais:getTransactionsScheduled" : {
          "$ref" : "#/definitions/PrivilegeAisAspspOut"
        },
        "ais:getTransactionDetail" : {
          "$ref" : "#/definitions/PrivilegeAisAspspOutSimple"
        },
        "pis:getPayment" : {
          "$ref" : "#/definitions/PrivilegePayment"
        },
        "pis:getBundle" : {
          "$ref" : "#/definitions/PrivilegeBundle"
        },
        "pis:domestic" : {
          "$ref" : "#/definitions/PrivilegeDomesticTransfer"
        },
        "pis:EEA" : {
          "$ref" : "#/definitions/PrivilegeForeignTransferEEA"
        },
        "pis:nonEEA" : {
          "$ref" : "#/definitions/PrivilegeForeignTransferNonEEA"
        },
        "pis:tax" : {
          "$ref" : "#/definitions/PrivilegeTaxTransfer"
        },
        "pis:cancelPayment" : {
          "$ref" : "#/definitions/PrivilegeCancelPayment"
        },
        "pis:bundle" : {
          "$ref" : "#/definitions/PrivilegeBundleTransfers"
        },
        "pis:recurring" : {
          "$ref" : "#/definitions/PrivilegeRecurringPayment"
        },
        "pis:getRecurringPayment" : {
          "$ref" : "#/definitions/PrivilegeRecurringPaymentStatus"
        },
        "pis:cancelRecurringPayment" : {
          "$ref" : "#/definitions/PrivilegeCancelRecurringPayment"
        }
      },
      "description" : "Pełna lista uprawnień, dla których została wyrażona zgoda przez PSU / The list of all privileges that the PSU's consent has been confirmed",
      "example" : {
        "ais:getTransactionsDone" : {
          "scopeUsageLimit" : "single",
          "maxAllowedHistoryLong" : 880
        },
        "ais:getHolds" : {
          "scopeUsageLimit" : "single",
          "maxAllowedHistoryLong" : 880
        },
        "ais:getTransactionsRejected" : {
          "scopeUsageLimit" : "single",
          "maxAllowedHistoryLong" : 880
        },
        "ais:getTransactionsCancelled" : {
          "scopeUsageLimit" : "single",
          "maxAllowedHistoryLong" : 880
        },
        "ais:getTransactionsScheduled" : {
          "scopeUsageLimit" : "single",
          "maxAllowedHistoryLong" : 880
        },
        "ais-accounts:getAccounts" : {
          "scopeUsageLimit" : "single",
          "maxAllowedHistoryLong" : 880
        },
        "pis:tax" : {
          "scopeUsageLimit" : "single"
        },
        "pis:getPayment" : {
          "scopeUsageLimit" : "single"
        },
        "pis:domestic" : {
          "scopeUsageLimit" : "single"
        },
        "ais:getTransactionDetail" : {
          "scopeUsageLimit" : "single",
          "maxAllowedHistoryLong" : 880
        },
        "ais:getTransactionsPending" : {
          "scopeUsageLimit" : "single",
          "maxAllowedHistoryLong" : 880
        },
        "pis:foreign" : {
          "scopeUsageLimit" : "single"
        },
        "pis:cancelPayment" : {
          "scopeUsageLimit" : "single",
          "paymentId" : 12345,
          "bundleId" : 12345
        },
        "pis:bundle" : {
          "scopeUsageLimit" : "single"
        }
      }
    }
  },
  "parameters" : {
    "authorizationParam" : {
      "name" : "Authorization",
      "in" : "header",
      "description" : "The value of the Authorization header should consist of 'type' + 'credentials', where for the approach using the 'type' token should be 'Bearer'.",
      "required" : true,
      "type" : "string"
    },
    "acceptEncodingParam" : {
      "name" : "Accept-Encoding",
      "in" : "header",
      "description" : "Gzip, deflate",
      "required" : true,
      "type" : "string",
      "enum" : [ "gzip", "deflate" ]
    },
    "acceptLanguageParam" : {
      "name" : "Accept-Language",
      "in" : "header",
      "description" : "Prefered language of response",
      "required" : true,
      "type" : "string"
    },
    "acceptCharsetParam" : {
      "name" : "Accept-Charset",
      "in" : "header",
      "description" : "UTF-8",
      "required" : true,
      "type" : "string",
      "enum" : [ "utf-8" ]
    },
    "xjwsSignatureParam" : {
      "name" : "X-JWS-SIGNATURE",
      "in" : "header",
      "description" : "Detached JWS signature of the body of the payload",
      "required" : true,
      "type" : "string"
    },
    "xRequestIdParam" : {
      "name" : "X-REQUEST-ID",
      "in" : "header",
      "description" : "Identyfikator żądania w formacie UUID (Wariant 1, Wersja 1), zgodnym ze standardem RFC 4122, nadawany przez TPP. Wartość musi być zgodna z parametrem requestId przekazywanym w ciele każdego żądania. / Request identifier using UUID format (Variant 1, Version 1), described in RFC 4122 standard, set by TPP. Value of this header must be the same as for the requestId param passed inside request payload.",
      "required" : true,
      "type" : "string"
    }
  }
}